.post-card__title {
  color: #0e3cda; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jYXJyaWVmb3JkZS9EZXNrdG9wL1dvcmRQcmVzcy9hdXJvcmEvYXBwL3B1YmxpYy93cC1jb250ZW50L3RoZW1lcy9hdXJvcmEtdGhlbWUvc3JjL1Bvc3RDYXJkL2luZGV4LnNjc3MiLCIvVXNlcnMvY2FycmllZm9yZGUvRGVza3RvcC9Xb3JkUHJlc3MvYXVyb3JhL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvYXVyb3JhLXRoZW1lL3NyYy9zYXNzL3V0aWxpdGllcy9fY29uZmlnLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUM7RUFDQyxlQ0d3QixFREZ4QiIsImZpbGUiOiJpbmRleC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIi4uL3Nhc3MvdXRpbGl0aWVzL3V0aWxpdGllc1wiO1xuXG4ucG9zdC1jYXJkIHtcblxuXHQmX190aXRsZSB7XG5cdFx0Y29sb3I6ICRjb2xvci1wcmltYXJ5O1xuXHR9XG59XG4iLCIvLyBDT05GSUdcbi8vIHN0eWxlbGludC1kaXNhYmxlIG1heC1saW5lLWxlbmd0aFxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENPTE9SU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIERlc2NyaXB0aXZlIGNvbG9ycy5cbiRwYWxhbnRpbmF0ZS1ibHVlOiAjMGUzY2RhO1xuJGJsdWUtZGUtZnJhbmNlOiAjNDU4ZGZlO1xuJHBhc3RlbC1vcmFuZ2U6ICNmZWI2NDU7XG4kbW9qbzogI2M2NDUzNjtcbiRub3J3YXk6ICM5ZWJlODM7XG4kYmxhY2s6ICMyMjI7XG4kYWx1bWludW06ICM5OTk7XG4kaXJvbjogI2NjYztcbiRnYWluc2Jvcm86ICNkZGQ7XG4kYXRoZW5zLWdyYXk6ICNlZWU7XG4kd2hpdGUtc21va2U6ICNmNWY1ZjU7XG4kYWxhYmFzdGVyOiAjZmJmYmZiO1xuJHdoaXRlOiAjZmZmO1xuXG4vLyBNYWluIGNvbG9ycy5cbiRjb2xvci1wcmltYXJ5OiAkcGFsYW50aW5hdGUtYmx1ZSAhZGVmYXVsdDtcbiRjb2xvci1zZWNvbmRhcnk6ICRibHVlLWRlLWZyYW5jZSAhZGVmYXVsdDtcbiRjb2xvci1hY2NlbnQ6ICRwYXN0ZWwtb3JhbmdlICFkZWZhdWx0O1xuJGNvbG9yLXN1Y2Nlc3M6ICRub3J3YXkgIWRlZmF1bHQ7XG4kY29sb3ItZGFuZ2VyOiAkbW9qbyAhZGVmYXVsdDtcbiRjb2xvci1saWdodC1ncmF5OiAkd2hpdGUtc21va2UgIWRlZmF1bHQ7XG4kY29sb3ItZGFyay1ncmF5OiAkYWx1bWludW0gIWRlZmF1bHQ7XG4kY29sb3Itc2hhZG93OiByZ2JhKCRibGFjaywgMC4xNSk7XG5cbi8vLyBUaGUgbWFpbiBjb2xvcnMgdXNlZCB0aHJvdWdob3V0IHRoZSBzaXRlLlxuLy8vIFRoaXMgbWFwIGNhbiBiZSB1c2VkIHRvIGF1dG9tYXRpY2FsbHkgYWRkIGNvbG9yIGNsYXNzZXMuXG4vLy9cbi8vLyBAdHlwZSBNYXBcbiR0aGVtZS1jb2xvcnM6IChcblx0XCJwcmltYXJ5XCI6ICRjb2xvci1wcmltYXJ5LFxuXHRcInNlY29uZGFyeVwiOiAkY29sb3Itc2Vjb25kYXJ5LFxuXHRcImFjY2VudFwiOiAkY29sb3ItYWNjZW50LFxuXHRcInN1Y2Nlc3NcIjogJGNvbG9yLXN1Y2Nlc3MsXG5cdFwiZGFuZ2VyXCI6ICRjb2xvci1kYW5nZXIsXG5cdFwibGlnaHQtZ3JheVwiOiAkY29sb3ItbGlnaHQtZ3JheSxcblx0XCJkYXJrLWdyYXlcIjogJGNvbG9yLWRhcmstZ3JheSxcblx0XCJzaGFkb3dcIjogJGNvbG9yLXNoYWRvd1xuKTtcblxuLy8gRWxlbWVudHMuXG4kYm9keS1iYWNrZ3JvdW5kOiAkd2hpdGU7XG5cbiR0ZXh0LWRlZmF1bHQtZGFyazogJGJsYWNrO1xuJHRleHQtZGVmYXVsdC1saWdodDogJHdoaXRlLXNtb2tlO1xuXG4kbGluazogJGNvbG9yLXByaW1hcnk7XG4kbGluay1ob3ZlcjogJGNvbG9yLXNlY29uZGFyeTtcbiRsaW5rLXZpc2l0ZWQ6ICRsaW5rO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRZUE9HUkFQSFlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWYsIFwiQXBwbGUgQ29sb3IgRW1vamlcIiwgXCJTZWdvZSBVSSBFbW9qaVwiLCBcIlNlZ29lIFVJIFN5bWJvbFwiICFkZWZhdWx0OyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIHZhbHVlLWtleXdvcmQtY2FzZVxuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkxpYmVyYXRpb24gTW9ub1wiLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZSAhZGVmYXVsdDsgLy8gc3R5bGVsaW50LWRpc2FibGUtbGluZSB2YWx1ZS1rZXl3b3JkLWNhc2VcblxuLy8vIFNldCB0aGUgYGJvZHlgIGZvbnQgZmFtaWx5LlxuLy8vXG4vLy8gQHR5cGUgU3RyaW5nXG4kYmFzZS1mb250LWZhbWlseTogJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY7XG5cbi8vLyBTZXQgdGhlIGJhc2UgKGByb290YCkgZm9udCBzaXplIGZvciB0aGUgcHJvamVjdC4gVGhpcyBzaG91bGQgYmUgdW5pdGxlc3MhXG4vLy9cbi8vLyBAdHlwZSBOdW1iZXJcbiRiYXNlLWZvbnQtc2l6ZTogMTYgIWRlZmF1bHQ7XG5cbi8vLyBTZXQgdGhlIGJhc2UgbGluZSBoZWlnaHQgZm9yIHRoZSBwcm9qZWN0LlxuLy8vIFRoaXMgdmFsdWUgc2hvdWxkIGJlIHVuaXRsZXNzIGFuZCByZXByZXNlbnQgdGhlIHBpeGVsIGVxdWl2YWxlbnQuXG4vLy9cbi8vLyBAdHlwZSBOdW1iZXJcbiRiYXNlLWxpbmUtaGVpZ2h0OiAyNCAhZGVmYXVsdDtcblxuLy8vIFNldCB0aGUgYmFzZSBmb250IHdlaWdodCBmb3IgdGhlIHByb2plY3QuXG4vLy9cbi8vLyBAdHlwZSB7TnVtYmVyfFN0cmluZ31cbiRiYXNlLWZvbnQtd2VpZ2h0OiA0MDAgIWRlZmF1bHQ7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTSVpFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vLyBTZXQgdGhlIG1heCB3aWR0aCBvZiB0aGUgc2l0ZS5cbi8vL1xuLy8vIEB0eXBlIE51bWJlclxuJHNpdGUtd2lkdGg6IDEwMCU7XG5cbi8vLyBTZXQgdGhlIHdpZHRoIG9mIHRoZSBzaXRlXCJzIGNvbnRlbnQuXG4vLy9cbi8vLyBAdHlwZSBOdW1iZXJcbiRjb250ZW50LXdpZHRoOiAxMjAwcHg7XG5cbi8vLyBTZXQgYSBkZWZhdWx0IGd1dHRlciB3aWR0aC5cbi8vL1xuLy8vIEB0eXBlIE51bWJlclxuJGd1dHRlcjogMjBweDtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJSRUFLUE9JTlRTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8vIEJyZWFrcG9pbnRzIC0gYWRkIG1vcmUgYXMgbmVlZGVkLlxuLy8vXG4vLy8gQHR5cGUgTnVtYmVyXG4vLy8gQGxpbmsgaHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVjYW1wLmNvbS90aGUtMTAwLWNvcnJlY3Qtd2F5LXRvLWRvLWNzcy1icmVha3BvaW50cy04OGQ2YTViYTE4NjIjLm9yM2R1bm8yaFxuJHRhYmxldC1wb3J0cmFpdDogNjAwcHg7XG4kdGFibGV0LWxhbmRzY2FwZTogOTAwcHg7XG4kZGVza3RvcDogMTIwMHB4O1xuJGRlc2t0b3AteGw6IDE4MDBweDtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFotSU5ERVhcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLy8gS2VlcCB5b3VyIHNhbml0eSB3aGlsZSBtYW5hZ2luZyB5b3VyIHotaW5kZWNlcy5cbi8vL1xuLy8vIEB0eXBlIE1hcFxuLy8vIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9taW5hbWFya2hhbS9zYXNzeS1zdGFydGVyL2Jsb2IvbWFzdGVyL3NyYy9zY3NzL3V0aWxpdGllcy9fY29uZmlnLnNjc3MjTDM5XG4kei1pbmRleDogKFxuXHRkZWZhdWx0OiAxXG4pO1xuIl19 *//*! sanitize.css v4.1.0 | CC0 License | github.com/jonathantneal/sanitize.css */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

template,
[hidden] {
  display: none; }

*,
::before,
::after {
  background-repeat: no-repeat;
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  cursor: default;
  font-family: sans-serif;
  line-height: 1.5;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

h1 {
  font-size: 2em;
  margin: .67em 0; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

hr {
  height: 0;
  overflow: visible; }

nav ol,
nav ul {
  list-style: none; }

abbr[title] {
  border-bottom: 1px dotted;
  text-decoration: none; }

b,
strong {
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

dfn {
  font-style: italic; }

mark {
  background-color: #ff0;
  color: #000; }

progress {
  vertical-align: baseline; }

small {
  font-size: 83.3333%; }

sub,
sup {
  font-size: 83.3333%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

::-moz-selection {
  background-color: #b3d4fc;
  color: #000;
  text-shadow: none; }

::selection {
  background-color: #b3d4fc;
  color: #000;
  text-shadow: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

img {
  border-style: none; }

svg {
  fill: currentColor; }
  svg:not(:root) {
    overflow: hidden; }

a {
  background-color: transparent;
  -webkit-text-decoration-skip: objects; }
  a:hover {
    outline-width: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

button,
input,
select,
textarea {
  background-color: transparent;
  border-style: none;
  color: inherit;
  font-size: 1em;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html [type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

::-moz-focus-inner {
  border-style: none;
  padding: 0; }

:-moz-focusring {
  outline: 1px dotted ButtonText; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: .35em .625em .75em; }

legend {
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal; }

textarea {
  overflow: auto;
  resize: vertical; }

[type='checkbox'],
[type='radio'] {
  padding: 0; }

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto; }

[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

::-webkit-search-cancel-button,
::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-input-placeholder {
  color: inherit;
  opacity: .54; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

[aria-busy='true'] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-disabled] {
  cursor: default; }

a,
area,
button,
input,
label,
select,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  touch-action: manipulation; }

[hidden][aria-hidden='false'] {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute; }
  [hidden][aria-hidden='false']:focus {
    clip: auto; }

html {
  font-size: "16px"; }

body {
  -webkit-font-smoothing: antialiased;
  background-color: #fff;
  color: #222;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  line-height: 1.5; }

a {
  color: #0e3cda;
  -webkit-transition: color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out; }
  a:visited {
    color: #0e3cda; }
  a:hover {
    color: #458dfe; }

img {
  height: auto;
  max-width: 100%; }

.screen-reader-text {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }
  .screen-reader-text-focusable:focus {
    border: auto;
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto; }

.primary-menu {
  max-height: 0;
  overflow: hidden;
  -webkit-transition: max-height 0.5s ease-in-out;
  transition: max-height 0.5s ease-in-out; }
  .toggled .primary-menu {
    max-height: 100vh; }

.menu,
.sub-menu {
  list-style: none;
  margin: 0;
  padding: 0; }

.sub-menu {
  max-height: 0;
  overflow: hidden;
  -webkit-transition: max-height 0.5s ease-in-out;
  transition: max-height 0.5s ease-in-out; }
  .menu-item-has-children:hover > .sub-menu {
    max-height: 100vh;
    overflow: visible; }
  .menu-item-has-children.focus > .sub-menu {
    max-height: 100vh;
    overflow: visible; }

.menu-item-has-children {
  padding-right: 24px;
  position: relative; }
  .menu-item-has-children:after {
    background: url(svg-defs.svg#chevron-down-usage) no-repeat;
    content: "";
    display: block;
    height: 24px;
    position: absolute;
    right: 0;
    top: 0;
    width: 24px; }
    @supports ((-webkit-mask-image: none) or (mask-image: none)) or (-webkit-mask-image: none) {
      .menu-item-has-children:after {
        background: none;
        background-color: currentColor;
        -webkit-mask-image: url(svg-defs.svg#chevron-down-usage);
                mask-image: url(svg-defs.svg#chevron-down-usage); } }

.site-header {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  padding: 20px;
  text-align: center; }

@media only screen and (min-width: 900px) {
    .primary-menu {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: end;
          -ms-flex-pack: end;
              justify-content: flex-end;
      max-height: 100%;
      overflow: visible; }
  .menu-toggle {
    display: none; }
  .menu > .menu-item + .menu-item {
    margin-left: 20px; }
    .sub-menu {
      position: absolute;
      top: 100%; }
    .site-header {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-pack: justify;
          -ms-flex-pack: justify;
              justify-content: space-between;
      text-align: left; } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jYXJyaWVmb3JkZS9EZXNrdG9wL1dvcmRQcmVzcy9hdXJvcmEvYXBwL3B1YmxpYy93cC1jb250ZW50L3RoZW1lcy9hdXJvcmEtdGhlbWUvbm9kZV9tb2R1bGVzL3Nhbml0aXplLnNjc3MvX3Nhbml0aXplLnNjc3MiLCJtYWluLnNjc3MiLCIvVXNlcnMvY2FycmllZm9yZGUvRGVza3RvcC9Xb3JkUHJlc3MvYXVyb3JhL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvYXVyb3JhLXRoZW1lL3NyYy9zYXNzL19iYXNlLnNjc3MiLCIvVXNlcnMvY2FycmllZm9yZGUvRGVza3RvcC9Xb3JkUHJlc3MvYXVyb3JhL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvYXVyb3JhLXRoZW1lL3NyYy9zYXNzL3V0aWxpdGllcy9fY29uZmlnLnNjc3MiLCIvVXNlcnMvY2FycmllZm9yZGUvRGVza3RvcC9Xb3JkUHJlc3MvYXVyb3JhL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvYXVyb3JhLXRoZW1lL3NyYy9zYXNzL3V0aWxpdGllcy9fZnVuY3Rpb25zLnNjc3MiLCIvVXNlcnMvY2FycmllZm9yZGUvRGVza3RvcC9Xb3JkUHJlc3MvYXVyb3JhL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvYXVyb3JhLXRoZW1lL3NyYy9zYXNzL3V0aWxpdGllcy9taXhpbnMvX3V0aWxpdGllcy5zY3NzIiwiL1VzZXJzL2NhcnJpZWZvcmRlL0Rlc2t0b3AvV29yZFByZXNzL2F1cm9yYS9hcHAvcHVibGljL3dwLWNvbnRlbnQvdGhlbWVzL2F1cm9yYS10aGVtZS9zcmMvc2Fzcy9tb2R1bGVzL19uYXZpZ2F0aW9uLnNjc3MiLCIvVXNlcnMvY2FycmllZm9yZGUvRGVza3RvcC9Xb3JkUHJlc3MvYXVyb3JhL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvYXVyb3JhLXRoZW1lL3NyYy9zYXNzL3V0aWxpdGllcy9taXhpbnMvX2VmZmVjdHMuc2NzcyIsIi9Vc2Vycy9jYXJyaWVmb3JkZS9EZXNrdG9wL1dvcmRQcmVzcy9hdXJvcmEvYXBwL3B1YmxpYy93cC1jb250ZW50L3RoZW1lcy9hdXJvcmEtdGhlbWUvc3JjL3Nhc3MvbGF5b3V0L19zaXRlLWhlYWRlci5zY3NzIiwiL1VzZXJzL2NhcnJpZWZvcmRlL0Rlc2t0b3AvV29yZFByZXNzL2F1cm9yYS9hcHAvcHVibGljL3dwLWNvbnRlbnQvdGhlbWVzL2F1cm9yYS10aGVtZS9zcmMvc2Fzcy91dGlsaXRpZXMvbWl4aW5zL19tZWRpYS1xdWVyaWVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0ZBQWdGO0FBUWhGOzs7Ozs7Ozs7Ozs7RUFZRSxlQUFjLEVBQ2Y7O0FBR0Q7Ozs7RUFJRSxzQkFBcUIsRUFDdEI7O0FBR0Q7RUFFSSxjQUFhO0VBQ2IsVUFBUyxFQUNWOztBQUtIOztFQUVFLGNBQWEsRUFDZDs7QUFPRDs7O0VBR0UsNkJBQTRCO0VBQzVCLDRCQUFtQjtVQUFuQixvQkFBbUIsRUFDcEI7O0FBSUQ7O0VBRUUseUJBQXdCO0VBQ3hCLHdCQUF1QixFQUN4Qjs7QUFNRDtFQUNFLCtCQUFzQjtVQUF0Qix1QkFBc0I7RUFDdEIsZ0JBQWU7RUFDZix3QkFBdUI7RUFDdkIsaUJBQWdCO0VBQ2hCLDJCQUEwQjtFQUMxQiwrQkFBOEIsRUFDL0I7O0FBTUQ7RUFDRSxVQUFTLEVBQ1Y7O0FBSUQ7RUFDRSxlQUFjO0VBQ2QsZ0JBQWUsRUFDaEI7O0FBT0Q7Ozs7RUFJRSxrQ0FBaUM7RUFDakMsZUFBYyxFQUNmOztBQUlEO0VBQ0UsVUFBUztFQUNULGtCQUFpQixFQUNsQjs7QUFHRDs7RUFHSSxpQkFBZ0IsRUFDakI7O0FBUUg7RUFFSSwwQkFBeUI7RUFDekIsc0JBQXFCLEVBQ3RCOztBQUlIOztFQUVFLHFCQUFvQixFQUNyQjs7QUFHRDs7RUFFRSxvQkFBbUIsRUFDcEI7O0FBR0Q7RUFDRSxtQkFBa0IsRUFDbkI7O0FBR0Q7RUFDRSx1QkFBc0I7RUFDdEIsWUFBVyxFQUNaOztBQUdEO0VBQ0UseUJBQXdCLEVBQ3pCOztBQUdEO0VBQ0Usb0JBQW1CLEVBQ3BCOztBQUtEOztFQUVFLG9CQUFtQjtFQUNuQixlQUFjO0VBQ2QsbUJBQWtCO0VBQ2xCLHlCQUF3QixFQUN6Qjs7QUFFRDtFQUNFLGVBQWMsRUFDZjs7QUFFRDtFQUNFLFdBQVUsRUFDWDs7QUFLRDtFQUNFLDBCQUF5QjtFQUN6QixZQUFXO0VBQ1gsa0JBQWlCLEVBQ2xCOztBQUVEO0VBQ0UsMEJBQXlCO0VBQ3pCLFlBQVc7RUFDWCxrQkFBaUIsRUFDbEI7O0FBTUQ7Ozs7OztFQU1FLHVCQUFzQixFQUN2Qjs7QUFHRDtFQUNFLG1CQUFrQixFQUNuQjs7QUFHRDtFQUNFLG1CQUFrQixFQU1uQjtFQVBEO0lBS0ksaUJBQWdCLEVBQ2pCOztBQVFIO0VBQ0UsOEJBQTZCO0VBQzdCLHNDQUFxQyxFQU10QztFQVJEO0lBTUksaUJBQWdCLEVBQ2pCOztBQU9IO0VBQ0UsMEJBQXlCO0VBQ3pCLGtCQUFpQixFQUNsQjs7QUFPRDs7OztFQUlFLDhCQUE2QjtFQUM3QixtQkFBa0I7RUFDbEIsZUFBYztFQUNkLGVBQWM7RUFDZCxVQUFTLEVBQ1Y7O0FBSUQ7O0VBRUUsa0JBQWlCLEVBQ2xCOztBQUlEOztFQUVFLHFCQUFvQixFQUNyQjs7QUFLRDs7OztFQUlFLDJCQUEwQixFQUMzQjs7QUFHRDtFQUNFLG1CQUFrQjtFQUNsQixXQUFVLEVBQ1g7O0FBR0Q7RUFDRSwrQkFBOEIsRUFDL0I7O0FBR0Q7RUFDRSwwQkFBeUI7RUFDekIsY0FBYTtFQUNiLDRCQUEyQixFQUM1Qjs7QUFLRDtFQUNFLGVBQWM7RUFDZCxnQkFBZTtFQUNmLFdBQVU7RUFDVixvQkFBbUIsRUFDcEI7O0FBSUQ7RUFDRSxlQUFjO0VBQ2QsaUJBQWdCLEVBQ2pCOztBQ3hJRDs7RUQ2SUUsV0FBVSxFQUNYOztBQUdEOztFQUVFLGFBQVksRUFDYjs7QUM1SUQ7RURpSkUsOEJBQTZCO0VBQzdCLHFCQUFvQixFQUNyQjs7QUFHRDs7RUFFRSx5QkFBd0IsRUFDekI7O0FBR0Q7RUFDRSxlQUFjO0VBQ2QsYUFBWSxFQUNiOztBQUlEO0VBQ0UsMkJBQTBCO0VBQzFCLGNBQWEsRUFDZDs7QUN0SkQ7RUQ2SkUsaUJBQWdCLEVBQ2pCOztBQzNKRDtFRCtKRSxnQkFBZSxFQUNoQjs7QUM3SkQ7RURrS0UsZ0JBQWUsRUFDaEI7O0FBT0Q7Ozs7Ozs7O0VBUUUsK0JBQThCO0VBQzlCLDJCQUEwQixFQUMzQjs7QUN0S0Q7RUQyS0ksdUJBQXNCO0VBQ3RCLGlCQUFnQjtFQUNoQixtQkFBa0IsRUFLbkI7RUM5S0Q7SUQ0S0ksV0FBVSxFQUNYOztBRXpaTDtFQUNDLGtCQUFpQyxFQUNqQzs7QUFFRDtFQUNDLG9DQUFtQztFQUNuQyx1QkNZVztFRFhYLFlDSVc7RURIWCxrS0NrRDRLO0VEakQ1SyxpQkVzQnVCLEVGckJ2Qjs7QUFFRDtFQUNDLGVDUHlCO0VEUXpCLDJDQUFrQztFQUFsQyxtQ0FBa0MsRUFTbEM7RUFYRDtJQUtFLGVDWHdCLEVEWXhCO0VBTkY7SUFTRSxlQ2RzQixFRGV0Qjs7QUFHRjtFQUNDLGFBQVk7RUFDWixnQkFBZSxFQUNmOztBQUVEO0VHb0JDLFVBQVM7RUFDVCxvQkFBbUI7RUFDbkIsWUFBVztFQUNYLGFBQVk7RUFDWixpQkFBZ0I7RUFDaEIsV0FBVTtFQUNWLG1CQUFrQjtFQUNsQixXQUFVLEVIbkJWO0VHNEJBO0lBQ0MsYUFBWTtJQUNaLFdBQVU7SUFDVixhQUFZO0lBQ1osVUFBUztJQUNULGtCQUFpQjtJQUNqQixpQkFBZ0I7SUFDaEIsWUFBVyxFQUNYOztBQzFFRjtFQ1FDLGNBQWE7RUFDYixpQkFBZ0I7RUFDaEIsZ0RBQTRDO0VBQTVDLHdDQUE0QyxFREE1QztFQzRCQztJQUNDLGtCQUFpQixFQUNqQjs7QURyQkg7O0VETUMsaUJBQWdCO0VBQ2hCLFVBQVM7RUFDVCxXQUFVLEVDSlY7O0FBWUQ7RUMzQkMsY0FBYTtFQUNiLGlCQUFnQjtFQUNoQixnREFBNEM7RUFBNUMsd0NBQTRDLEVEaUM1QztFQ2JHO0lBQ0Msa0JBQWlCO0lBQ2pCLGtCQUFpQixFQUNqQjtFQUhEO0lBQ0Msa0JBQWlCO0lBQ2pCLGtCQUFpQixFQUNqQjs7QURZTDtFQUNDLG9CQUFtQjtFQUNuQixtQkFBa0IsRUFrQmxCO0VBcEJEO0lBS0UscURBQW9EO0lBQ3BELFlBQVc7SUFDWCxlQUFjO0lBQ2QsYUFBWTtJQUNaLG1CQUFrQjtJQUNsQixTQUFRO0lBQ1IsT0FBTTtJQUNOLFlBQVcsRUFPWDtJQUwwRDtNQWQ1RDtRQWVHLGlCQUFnQjtRQUNoQiwrQkFBOEI7UUFDOUIsbURBQTBDO2dCQUExQywyQ0FBMEMsRUFFM0MsRUFBQTs7QUVoRUY7RUFDQywwQkFBbUI7TUFBbkIsdUJBQW1CO1VBQW5CLG9CQUFtQjtFQUNuQixxQkFBYTtFQUFiLHFCQUFhO0VBQWIsY0FBYTtFQUNiLDZCQUFzQjtFQUF0Qiw4QkFBc0I7TUFBdEIsMkJBQXNCO1VBQXRCLHVCQUFzQjtFQUN0QixjTGdHWTtFSy9GWixtQkFBa0IsRUFPbEI7O0FDQ0E7SUhiRDtNQUtFLHFCQUFhO01BQWIscUJBQWE7TUFBYixjQUFhO01BQ2Isc0JBQXlCO1VBQXpCLG1CQUF5QjtjQUF6QiwwQkFBeUI7TUFDekIsaUJBQWdCO01BQ2hCLGtCQUFpQixFQUVsQjtFQUVEO0lBR0UsY0FBYSxFQUVkO0VBUUQ7SUFLRyxrQkFBaUIsRUFDakI7SUFJSDtNQUtFLG1CQUFrQjtNQUNsQixVQUFTLEVBRVY7SUUzQ0Q7TUFRRSwrQkFBbUI7TUFBbkIsOEJBQW1CO1VBQW5CLHdCQUFtQjtjQUFuQixvQkFBbUI7TUFDbkIsMEJBQThCO1VBQTlCLHVCQUE4QjtjQUE5QiwrQkFBOEI7TUFDOUIsaUJBQWdCLEVBRWpCLEVGRkEiLCJmaWxlIjoibWFpbi5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIHNhbml0aXplLmNzcyB2NC4xLjAgfCBDQzAgTGljZW5zZSB8IGdpdGh1Yi5jb20vam9uYXRoYW50bmVhbC9zYW5pdGl6ZS5jc3MgKi9cblxuLy8gRGlzcGxheSBkZWZpbml0aW9uc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4vLyAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4vLyAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8vIDFcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvLyAyXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvLyAxXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vLyBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLy8gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbmF1ZGlvIHtcbiAgJjpub3QoW2NvbnRyb2xzXSkge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbi8vIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxudGVtcGxhdGUsIC8vIDFcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLy8gIEVsZW1lbnRzIG9mIEhUTUwgKGh0dHBzOi8vd3d3LnczLm9yZy9UUi9odG1sNS9zZW1hbnRpY3MuaHRtbClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIFJlbW92ZSByZXBlYXRpbmcgYmFja2dyb3VuZHMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4vLyAyLiBBZGQgYm94IHNpemluZyBpbmhlcml0ZW5jZSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiosXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyAvLyAxXG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IC8vIDJcbn1cblxuLy8gMS4gQWRkIHRleHQgZGVjb3JhdGlvbiBpbmhlcml0YW5jZSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbi8vIDIuIEFkZCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW5oZXJpdGVuY2UgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7IC8vIDFcbiAgdmVydGljYWwtYWxpZ246IGluaGVyaXQ7IC8vIDJcbn1cblxuLy8gMS4gQWRkIGJvcmRlciBib3ggc2l6aW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuLy8gMi4gQWRkIHRoZSBkZWZhdWx0IGN1cnNvciBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbi8vIDMuIEFkZCBhIGZsYXR0ZW5lZCBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbi8vIDQuIFByZXZlbnQgZm9udCBzaXplIGFkanVzdG1lbnRzIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvLyAxXG4gIGN1cnNvcjogZGVmYXVsdDsgLy8gMlxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLy8gM1xuICBsaW5lLWhlaWdodDogMS41OyAvLyAzXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvLyA0XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gNVxufVxuXG4vLyAgU2VjdGlvbnMgKGh0dHBzOi8vd3d3LnczLm9yZy9UUi9odG1sNS9zZWN0aW9ucy5odG1sKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vLyBDb3JyZWN0IHRoZSBmb250IHNpemVzIGFuZCBtYXJnaW5zIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluXG4vLyBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IC42N2VtIDA7XG59XG5cbi8vICBHcm91cGluZyBjb250ZW50IChodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDUvZ3JvdXBpbmctY29udGVudC5odG1sKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gQ29ycmVjdCBmb250IHNpemluZyBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBpbiBhbGwgYnJvd3NlcnMuXG4vLyAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLy8gMVxuICBmb250LXNpemU6IDFlbTsgLy8gMlxufVxuXG4vLyAxLiBDb3JyZWN0IHRoZSBoZWlnaHQgaW4gRmlyZWZveC5cbi8vIDIuIEFkZCB2aXNpYmxlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuaHIge1xuICBoZWlnaHQ6IDA7IC8vIDFcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8vIDJcbn1cblxuLy8gUmVtb3ZlIHRoZSBsaXN0IHN0eWxlIG9uIG5hdmlnYXRpb24gbGlzdHMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG5uYXYge1xuICBvbCxcbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIH1cbn1cblxuLy8gIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBBZGQgYSBib3JkZXJlZCB1bmRlcmxpbmUgZWZmZWN0IGluIGFsbCBicm93c2Vycy5cbi8vIDIuIFJlbW92ZSB0ZXh0IGRlY29yYXRpb24gaW4gRmlyZWZveCA0MCsuXG5hYmJyIHtcbiAgJlt0aXRsZV0ge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IC8vIDFcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IC8vIDJcbiAgfVxufVxuXG4vLyBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLy8gQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vLyBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCBjb2xvcnMgaW4gSUUgOS0uXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLy8gQ29ycmVjdCB0aGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4My4zMzMzJTtcbn1cblxuLy8gQ2hhbmdlIHRoZSBwb3NpdGlvbmluZyBvbiBzdXBlcnNjcmlwdCBhbmQgc3Vic2NyaXB0IGVsZW1lbnRzXG4vLyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbi8vIDEuIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDgzLjMzMzMlOyAvLyAxXG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLS41ZW07XG59XG5cblxuLy8gUmVtb3ZlIHRoZSB0ZXh0IHNoYWRvdyBvbiB0ZXh0IHNlbGVjdGlvbnMgKG9waW5pb25hdGVkKS5cbi8vIDEuIFJlc3RvcmUgdGhlIGNvbG9yaW5nIHVuZG9uZSBieSBkZWZpbmluZyB0aGUgdGV4dCBzaGFkb3cgKG9waW5pb25hdGVkKS5cbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNkNGZjOyAvLyAxXG4gIGNvbG9yOiAjMDAwOyAvLyAxXG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiM2Q0ZmM7IC8vIDFcbiAgY29sb3I6ICMwMDA7IC8vIDFcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG5cbi8vICBFbWJlZGRlZCBjb250ZW50IChodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDUvZW1iZWRkZWQtY29udGVudC0wLmh0bWwpXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDaGFuZ2UgdGhlIGFsaWdubWVudCBvbiBtZWRpYSBlbGVtZW50cyBpbiBhbGwgYnJvd2VycyAob3BpbmlvbmF0ZWQpLlxuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi8vIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vLyBDaGFuZ2UgdGhlIGZpbGwgY29sb3IgdG8gbWF0Y2ggdGhlIHRleHQgY29sb3IgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG5zdmcge1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG5cbiAgLy8gSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUVcbiAgJjpub3QoOnJvb3QpIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG59XG5cbi8vICBMaW5rcyAoaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L2xpbmtzLmh0bWwjbGlua3MpXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4vLyAyLiBSZW1vdmUgdGhlIGdhcHMgaW4gdW5kZXJsaW5lcyBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLy8gMVxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvLyAyXG5cbiAgLy8gUmVtb3ZlIHRoZSBvdXRsaW5lIHdoZW4gaG92ZXJpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gICY6aG92ZXIge1xuICAgIG91dGxpbmUtd2lkdGg6IDA7XG4gIH1cbn1cblxuLy8gIFRhYnVsYXIgZGF0YSAoaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L3RhYnVsYXItZGF0YS5odG1sKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIGJvcmRlciBzcGFjaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuLy8gIHRyYW5zZm9ybS1zdHlsZTogIChodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDUvZm9ybXMuaHRtbClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIFJlbW92ZSB0aGUgZGVmYXVsdCBzdHlsaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuLy8gMy4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvLyAxXG4gIGJvcmRlci1zdHlsZTogbm9uZTsgLy8gMVxuICBjb2xvcjogaW5oZXJpdDsgLy8gMVxuICBmb250LXNpemU6IDFlbTsgLy8gMVxuICBtYXJnaW46IDA7IC8vIDNcbn1cblxuLy8gQ29ycmVjdCB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4vLyAxLiBDb3JyZWN0IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuYnV0dG9uLFxuaW5wdXQgeyAvLyAxXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vLyBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbi8vIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbmJ1dHRvbixcbnNlbGVjdCB7IC8vIDFcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8vIDEuIFByZXZlbnQgdGhlIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4vLyAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4vLyAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuYnV0dG9uLFxuaHRtbCBbdHlwZT0nYnV0dG9uJ10sIC8vIDFcblt0eXBlPSdyZXNldCddLFxuW3R5cGU9J3N1Ym1pdCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8vIDJcbn1cblxuLy8gUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbjo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLy8gQ29ycmVjdCB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vLyBDb3JyZWN0IHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzLlxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAuMzVlbSAuNjI1ZW0gLjc1ZW07XG59XG5cbi8vIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4vLyAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4vLyAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbmxlZ2VuZCB7XG4gIGRpc3BsYXk6IHRhYmxlOyAvLyAxXG4gIG1heC13aWR0aDogMTAwJTsgLy8gMVxuICBwYWRkaW5nOiAwOyAvLyAyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8vIDFcbn1cblxuLy8gMS4gUmVtb3ZlIHRoZSB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4vLyAyLiBDaGFuZ2UgdGhlIHJlc2l6ZSBkaXJlY3Rpb24gb24gdGV4dGFyZWFzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgLy8gMVxuICByZXNpemU6IHZlcnRpY2FsOyAvLyAyXG59XG5cbi8vIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG5bdHlwZT0nY2hlY2tib3gnXSxcblt0eXBlPSdyYWRpbyddIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLy8gQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9uIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vLyAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbi8vIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuW3R5cGU9J3NlYXJjaCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8vIDFcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8vIDJcbn1cblxuLy8gUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBmb3IgT1MgWC5cbjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbjo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLy8gQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvbiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IC41NDtcbn1cblxuLy8gMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbi8vIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLy8gMVxuICBmb250OiBpbmhlcml0OyAvLyAyXG59XG5cbi8vICBXQUktQVJJQSAoaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L2RvbS5odG1sI3dhaS1hcmlhKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQ2hhbmdlIHRoZSBjdXJzb3Igb24gYnVzeSBlbGVtZW50cyAob3BpbmlvbmF0ZWQpLlxuW2FyaWEtYnVzeT0ndHJ1ZSddIHtcbiAgY3Vyc29yOiBwcm9ncmVzcztcbn1cblxuLy8gQ2hhbmdlIHRoZSBjdXJzb3Igb24gY29udHJvbCBlbGVtZW50cyAob3BpbmlvbmF0ZWQpLlxuW2FyaWEtY29udHJvbHNdIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vLyBDaGFuZ2UgdGhlIGN1cnNvciBvbiBkaXNhYmxlZCwgbm90LWVkaXRhYmxlLCBvciBvdGhlcndpc2Vcbi8vIGlub3BlcmFibGUgZWxlbWVudHMgKG9waW5pb25hdGVkKS5cblthcmlhLWRpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLy8gVXNlciBpbnRlcmFjdGlvbiAoaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L2VkaXRpbmcuaHRtbClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIFJlbW92ZSB0aGUgdGFwcGluZyBkZWxheSBvbiBjbGlja2FibGUgZWxlbWVudHMgKG9waW5pb25hdGVkKS5cbi8vIDEuIFJlbW92ZSB0aGUgdGFwcGluZyBkZWxheSBpbiBJRSAxMC5cbmEsXG5hcmVhLFxuYnV0dG9uLFxuaW5wdXQsXG5sYWJlbCxcbnNlbGVjdCxcbnRleHRhcmVhLFxuW3RhYmluZGV4XSB7XG4gIC1tcy10b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjsgLy8gMVxuICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbn1cblxuLy8gQ2hhbmdlIHRoZSBkaXNwbGF5IG9uIHZpc3VhbGx5IGhpZGRlbiBhY2Nlc3NpYmxlIGVsZW1lbnRzIChvcGluaW9uYXRlZCkuXG5baGlkZGVuXSB7XG4gICZbYXJpYS1oaWRkZW49J2ZhbHNlJ10ge1xuICAgIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gICAgZGlzcGxheTogaW5oZXJpdDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIGNsaXA6IGF1dG87XG4gICAgfVxuICB9XG59XG4iLCIvKiEgc2FuaXRpemUuY3NzIHY0LjEuMCB8IENDMCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9qb25hdGhhbnRuZWFsL3Nhbml0aXplLmNzcyAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4qLFxuOjpiZWZvcmUsXG46OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyB9XG5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS41O1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyB9XG5cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAuNjdlbSAwOyB9XG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG5ociB7XG4gIGhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxubmF2IG9sLFxubmF2IHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODMuMzMzMyU7IH1cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA4My4zMzMzJTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLS4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLS41ZW07IH1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiM2Q0ZmM7XG4gIGNvbG9yOiAjMDAwO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiM2Q0ZmM7XG4gIGNvbG9yOiAjMDAwO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG5hdWRpbyxcbmNhbnZhcyxcbmlmcmFtZSxcbmltZyxcbnN2ZyxcbnZpZGVvIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuc3ZnIHtcbiAgZmlsbDogY3VycmVudENvbG9yOyB9XG4gIHN2Zzpub3QoOnJvb3QpIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgfVxuICBhOmhvdmVyIHtcbiAgICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LXNpemU6IDFlbTtcbiAgbWFyZ2luOiAwOyB9XG5cbmJ1dHRvbixcbmlucHV0IHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT0nYnV0dG9uJ10sXG5bdHlwZT0ncmVzZXQnXSxcblt0eXBlPSdzdWJtaXQnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbjo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG46LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAuMzVlbSAuNjI1ZW0gLjc1ZW07IH1cblxubGVnZW5kIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMDtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgfVxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xuICByZXNpemU6IHZlcnRpY2FsOyB9XG5cblt0eXBlPSdjaGVja2JveCddLFxuW3R5cGU9J3JhZGlvJ10ge1xuICBwYWRkaW5nOiAwOyB9XG5cbjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG5bdHlwZT0nc2VhcmNoJ10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IH1cblxuOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAuNTQ7IH1cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICBmb250OiBpbmhlcml0OyB9XG5cblthcmlhLWJ1c3k9J3RydWUnXSB7XG4gIGN1cnNvcjogcHJvZ3Jlc3M7IH1cblxuW2FyaWEtY29udHJvbHNdIHtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cblthcmlhLWRpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG5hLFxuYXJlYSxcbmJ1dHRvbixcbmlucHV0LFxubGFiZWwsXG5zZWxlY3QsXG50ZXh0YXJlYSxcblt0YWJpbmRleF0ge1xuICAtbXMtdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOyB9XG5cbltoaWRkZW5dW2FyaWEtaGlkZGVuPSdmYWxzZSddIHtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgZGlzcGxheTogaW5oZXJpdDtcbiAgcG9zaXRpb246IGFic29sdXRlOyB9XG4gIFtoaWRkZW5dW2FyaWEtaGlkZGVuPSdmYWxzZSddOmZvY3VzIHtcbiAgICBjbGlwOiBhdXRvOyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IFwiMTZweFwiOyB9XG5cbmJvZHkge1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgY29sb3I6ICMyMjI7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmLCBcIkFwcGxlIENvbG9yIEVtb2ppXCIsIFwiU2Vnb2UgVUkgRW1vamlcIiwgXCJTZWdvZSBVSSBTeW1ib2xcIjtcbiAgbGluZS1oZWlnaHQ6IDEuNTsgfVxuXG5hIHtcbiAgY29sb3I6ICMwZTNjZGE7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbi1vdXQ7IH1cbiAgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogIzBlM2NkYTsgfVxuICBhOmhvdmVyIHtcbiAgICBjb2xvcjogIzQ1OGRmZTsgfVxuXG5pbWcge1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4uc2NyZWVuLXJlYWRlci10ZXh0IHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7IH1cbiAgLnNjcmVlbi1yZWFkZXItdGV4dC1mb2N1c2FibGU6Zm9jdXMge1xuICAgIGJvcmRlcjogYXV0bztcbiAgICBjbGlwOiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXJnaW46IDA7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgICB3aWR0aDogYXV0bzsgfVxuXG4ucHJpbWFyeS1tZW51IHtcbiAgbWF4LWhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjVzIGVhc2UtaW4tb3V0OyB9XG4gIC50b2dnbGVkIC5wcmltYXJ5LW1lbnUge1xuICAgIG1heC1oZWlnaHQ6IDEwMHZoOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTAwcHgpIHtcbiAgICAucHJpbWFyeS1tZW51IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5MDBweCkge1xuICAubWVudS10b2dnbGUge1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4ubWVudSxcbi5zdWItbWVudSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDkwMHB4KSB7XG4gIC5tZW51ID4gLm1lbnUtaXRlbSArIC5tZW51LWl0ZW0ge1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4OyB9IH1cblxuLnN1Yi1tZW51IHtcbiAgbWF4LWhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjVzIGVhc2UtaW4tb3V0OyB9XG4gIC5tZW51LWl0ZW0taGFzLWNoaWxkcmVuOmhvdmVyID4gLnN1Yi1tZW51IHtcbiAgICBtYXgtaGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuICAubWVudS1pdGVtLWhhcy1jaGlsZHJlbi5mb2N1cyA+IC5zdWItbWVudSB7XG4gICAgbWF4LWhlaWdodDogMTAwdmg7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5MDBweCkge1xuICAgIC5zdWItbWVudSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDEwMCU7IH0gfVxuXG4ubWVudS1pdGVtLWhhcy1jaGlsZHJlbiB7XG4gIHBhZGRpbmctcmlnaHQ6IDI0cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubWVudS1pdGVtLWhhcy1jaGlsZHJlbjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogdXJsKC4uL2ljb25zL2NoZXZyb24tZG93bi5zdmcpIG5vLXJlcGVhdDtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMjRweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAyNHB4OyB9XG4gICAgQHN1cHBvcnRzIChtYXNrLWltYWdlOiBub25lKSBvciAoLXdlYmtpdC1tYXNrLWltYWdlOiBub25lKSB7XG4gICAgICAubWVudS1pdGVtLWhhcy1jaGlsZHJlbjphZnRlciB7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgICAgbWFzay1pbWFnZTogdXJsKC4uL2ljb25zL2NoZXZyb24tZG93bi5zdmcpOyB9IH1cblxuLnNpdGUtaGVhZGVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTAwcHgpIHtcbiAgICAuc2l0ZS1oZWFkZXIge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuIiwiLy8gQkFTRVxuXG5odG1sIHtcblx0Zm9udC1zaXplOiAkYmFzZS1mb250LXNpemUgKyBcInB4XCI7XG59XG5cbmJvZHkge1xuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0YmFja2dyb3VuZC1jb2xvcjogJGJvZHktYmFja2dyb3VuZDsgLy8gc3R5bGVsaW50LWRpc2FibGUtbGluZSBvcmRlci9wcm9wZXJ0aWVzLWFscGhhYmV0aWNhbC1vcmRlclxuXHRjb2xvcjogJHRleHQtZGVmYXVsdC1kYXJrO1xuXHRmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG5cdGxpbmUtaGVpZ2h0OiB1bml0bGVzcy1jYWxjKCRiYXNlLWxpbmUtaGVpZ2h0LCAkYmFzZS1mb250LXNpemUpO1xufVxuXG5hIHtcblx0Y29sb3I6ICRsaW5rO1xuXHR0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2UtaW4tb3V0O1xuXG5cdCY6dmlzaXRlZCB7XG5cdFx0Y29sb3I6ICRsaW5rLXZpc2l0ZWQ7XG5cdH1cblxuXHQmOmhvdmVyIHtcblx0XHRjb2xvcjogJGxpbmstaG92ZXI7XG5cdH1cbn1cblxuaW1nIHtcblx0aGVpZ2h0OiBhdXRvO1xuXHRtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi5zY3JlZW4tcmVhZGVyLXRleHQge1xuXG5cdEBpbmNsdWRlIHNjcmVlbi1yZWFkZXItdGV4dDtcblxuXHQmLWZvY3VzYWJsZSB7XG5cblx0XHRAaW5jbHVkZSBzY3JlZW4tcmVhZGVyLXRleHQtZm9jdXNhYmxlO1xuXHR9XG59XG4iLCIvLyBDT05GSUdcbi8vIHN0eWxlbGludC1kaXNhYmxlIG1heC1saW5lLWxlbmd0aFxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENPTE9SU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIERlc2NyaXB0aXZlIGNvbG9ycy5cbiRwYWxhbnRpbmF0ZS1ibHVlOiAjMGUzY2RhO1xuJGJsdWUtZGUtZnJhbmNlOiAjNDU4ZGZlO1xuJHBhc3RlbC1vcmFuZ2U6ICNmZWI2NDU7XG4kbW9qbzogI2M2NDUzNjtcbiRub3J3YXk6ICM5ZWJlODM7XG4kYmxhY2s6ICMyMjI7XG4kYWx1bWludW06ICM5OTk7XG4kaXJvbjogI2NjYztcbiRnYWluc2Jvcm86ICNkZGQ7XG4kYXRoZW5zLWdyYXk6ICNlZWU7XG4kd2hpdGUtc21va2U6ICNmNWY1ZjU7XG4kYWxhYmFzdGVyOiAjZmJmYmZiO1xuJHdoaXRlOiAjZmZmO1xuXG4vLyBNYWluIGNvbG9ycy5cbiRjb2xvci1wcmltYXJ5OiAkcGFsYW50aW5hdGUtYmx1ZSAhZGVmYXVsdDtcbiRjb2xvci1zZWNvbmRhcnk6ICRibHVlLWRlLWZyYW5jZSAhZGVmYXVsdDtcbiRjb2xvci1hY2NlbnQ6ICRwYXN0ZWwtb3JhbmdlICFkZWZhdWx0O1xuJGNvbG9yLXN1Y2Nlc3M6ICRub3J3YXkgIWRlZmF1bHQ7XG4kY29sb3ItZGFuZ2VyOiAkbW9qbyAhZGVmYXVsdDtcbiRjb2xvci1saWdodC1ncmF5OiAkd2hpdGUtc21va2UgIWRlZmF1bHQ7XG4kY29sb3ItZGFyay1ncmF5OiAkYWx1bWludW0gIWRlZmF1bHQ7XG4kY29sb3Itc2hhZG93OiByZ2JhKCRibGFjaywgMC4xNSk7XG5cbi8vLyBUaGUgbWFpbiBjb2xvcnMgdXNlZCB0aHJvdWdob3V0IHRoZSBzaXRlLlxuLy8vIFRoaXMgbWFwIGNhbiBiZSB1c2VkIHRvIGF1dG9tYXRpY2FsbHkgYWRkIGNvbG9yIGNsYXNzZXMuXG4vLy9cbi8vLyBAdHlwZSBNYXBcbiR0aGVtZS1jb2xvcnM6IChcblx0XCJwcmltYXJ5XCI6ICRjb2xvci1wcmltYXJ5LFxuXHRcInNlY29uZGFyeVwiOiAkY29sb3Itc2Vjb25kYXJ5LFxuXHRcImFjY2VudFwiOiAkY29sb3ItYWNjZW50LFxuXHRcInN1Y2Nlc3NcIjogJGNvbG9yLXN1Y2Nlc3MsXG5cdFwiZGFuZ2VyXCI6ICRjb2xvci1kYW5nZXIsXG5cdFwibGlnaHQtZ3JheVwiOiAkY29sb3ItbGlnaHQtZ3JheSxcblx0XCJkYXJrLWdyYXlcIjogJGNvbG9yLWRhcmstZ3JheSxcblx0XCJzaGFkb3dcIjogJGNvbG9yLXNoYWRvd1xuKTtcblxuLy8gRWxlbWVudHMuXG4kYm9keS1iYWNrZ3JvdW5kOiAkd2hpdGU7XG5cbiR0ZXh0LWRlZmF1bHQtZGFyazogJGJsYWNrO1xuJHRleHQtZGVmYXVsdC1saWdodDogJHdoaXRlLXNtb2tlO1xuXG4kbGluazogJGNvbG9yLXByaW1hcnk7XG4kbGluay1ob3ZlcjogJGNvbG9yLXNlY29uZGFyeTtcbiRsaW5rLXZpc2l0ZWQ6ICRsaW5rO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRZUE9HUkFQSFlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWYsIFwiQXBwbGUgQ29sb3IgRW1vamlcIiwgXCJTZWdvZSBVSSBFbW9qaVwiLCBcIlNlZ29lIFVJIFN5bWJvbFwiICFkZWZhdWx0OyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIHZhbHVlLWtleXdvcmQtY2FzZVxuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkxpYmVyYXRpb24gTW9ub1wiLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZSAhZGVmYXVsdDsgLy8gc3R5bGVsaW50LWRpc2FibGUtbGluZSB2YWx1ZS1rZXl3b3JkLWNhc2VcblxuLy8vIFNldCB0aGUgYGJvZHlgIGZvbnQgZmFtaWx5LlxuLy8vXG4vLy8gQHR5cGUgU3RyaW5nXG4kYmFzZS1mb250LWZhbWlseTogJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY7XG5cbi8vLyBTZXQgdGhlIGJhc2UgKGByb290YCkgZm9udCBzaXplIGZvciB0aGUgcHJvamVjdC4gVGhpcyBzaG91bGQgYmUgdW5pdGxlc3MhXG4vLy9cbi8vLyBAdHlwZSBOdW1iZXJcbiRiYXNlLWZvbnQtc2l6ZTogMTYgIWRlZmF1bHQ7XG5cbi8vLyBTZXQgdGhlIGJhc2UgbGluZSBoZWlnaHQgZm9yIHRoZSBwcm9qZWN0LlxuLy8vIFRoaXMgdmFsdWUgc2hvdWxkIGJlIHVuaXRsZXNzIGFuZCByZXByZXNlbnQgdGhlIHBpeGVsIGVxdWl2YWxlbnQuXG4vLy9cbi8vLyBAdHlwZSBOdW1iZXJcbiRiYXNlLWxpbmUtaGVpZ2h0OiAyNCAhZGVmYXVsdDtcblxuLy8vIFNldCB0aGUgYmFzZSBmb250IHdlaWdodCBmb3IgdGhlIHByb2plY3QuXG4vLy9cbi8vLyBAdHlwZSB7TnVtYmVyfFN0cmluZ31cbiRiYXNlLWZvbnQtd2VpZ2h0OiA0MDAgIWRlZmF1bHQ7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTSVpFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vLyBTZXQgdGhlIG1heCB3aWR0aCBvZiB0aGUgc2l0ZS5cbi8vL1xuLy8vIEB0eXBlIE51bWJlclxuJHNpdGUtd2lkdGg6IDEwMCU7XG5cbi8vLyBTZXQgdGhlIHdpZHRoIG9mIHRoZSBzaXRlXCJzIGNvbnRlbnQuXG4vLy9cbi8vLyBAdHlwZSBOdW1iZXJcbiRjb250ZW50LXdpZHRoOiAxMjAwcHg7XG5cbi8vLyBTZXQgYSBkZWZhdWx0IGd1dHRlciB3aWR0aC5cbi8vL1xuLy8vIEB0eXBlIE51bWJlclxuJGd1dHRlcjogMjBweDtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJSRUFLUE9JTlRTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8vIEJyZWFrcG9pbnRzIC0gYWRkIG1vcmUgYXMgbmVlZGVkLlxuLy8vXG4vLy8gQHR5cGUgTnVtYmVyXG4vLy8gQGxpbmsgaHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVjYW1wLmNvbS90aGUtMTAwLWNvcnJlY3Qtd2F5LXRvLWRvLWNzcy1icmVha3BvaW50cy04OGQ2YTViYTE4NjIjLm9yM2R1bm8yaFxuJHRhYmxldC1wb3J0cmFpdDogNjAwcHg7XG4kdGFibGV0LWxhbmRzY2FwZTogOTAwcHg7XG4kZGVza3RvcDogMTIwMHB4O1xuJGRlc2t0b3AteGw6IDE4MDBweDtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFotSU5ERVhcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLy8gS2VlcCB5b3VyIHNhbml0eSB3aGlsZSBtYW5hZ2luZyB5b3VyIHotaW5kZWNlcy5cbi8vL1xuLy8vIEB0eXBlIE1hcFxuLy8vIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9taW5hbWFya2hhbS9zYXNzeS1zdGFydGVyL2Jsb2IvbWFzdGVyL3NyYy9zY3NzL3V0aWxpdGllcy9fY29uZmlnLnNjc3MjTDM5XG4kei1pbmRleDogKFxuXHRkZWZhdWx0OiAxXG4pO1xuIiwiLy8gRlVOQ1RJT05TXG5cbi8vLyBSZW1vdmVzIHVuaXQgZnJvbSBsZW5ndGguXG4vLy9cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRudW1iZXIgLSBOdW1iZXIgZnJvbSB3aGljaCB0byByZW1vdmUgdW5pdC5cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgICAgLSBVbml0bGVzcyBudW1iZXIuXG4vLy9cbi8vLyBAbGluayAgIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvc2Fzcy9zdHJpcC11bml0LWZ1bmN0aW9uL1xuQGZ1bmN0aW9uIHN0cmlwLXVuaXQoJG51bWJlcikge1xuXG5cdEBpZiB0eXBlLW9mKCRudW1iZXIpID09IFwibnVtYmVyXCIgYW5kIG5vdCB1bml0bGVzcygkbnVtYmVyKSB7XG5cblx0XHRAcmV0dXJuICRudW1iZXIvICgkbnVtYmVyICogMCArIDEpO1xuXHR9XG5cblx0QHJldHVybiAkbnVtYmVyO1xufVxuXG4vLy8gR2V0IGEgdW5pdGxlc3MgbnVtYmVyIGZyb20gdHdvIG51bWJlcnMuIEhlbHBmdWwgZm9yIGNhbGN1bGF0aW9uIGxpbmUgaGVpZ2h0LlxuLy8vXG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkbnVtYmVyICAgICAgICAgICAgICAgICAtIE51bWVyYXRvciBmb3IgY2FsY3VsYXRpb24uXG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkYmFzZSBbJGJhc2UtZm9udC1zaXplXSAtIERlbm9taW5hdG9yIGZvciBjYWxjdWxhdGlvbi5cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgICAgICAgICAgICAgICAgICAgIC0gTnVtYmVyIHdpdGhvdXQgdW5pdHMuXG5AZnVuY3Rpb24gdW5pdGxlc3MtY2FsYygkbnVtYmVyLCAkYmFzZTogJGJhc2UtZm9udC1zaXplKSB7XG5cblx0QGlmIG5vdCB1bml0bGVzcygkbnVtYmVyKSB7XG5cdFx0JG51bWJlcjogc3RyaXAtdW5pdCgkbnVtYmVyKTtcblx0fVxuXG5cdEBpZiBub3QgdW5pdGxlc3MoJGJhc2UpIHtcblx0XHQkYmFzZTogc3RyaXAtdW5pdCgkYmFzZSk7XG5cdH1cblxuXHRAcmV0dXJuICRudW1iZXIgLyAkYmFzZTtcbn1cblxuLy8vIENvbnZlcnQgYSBwaXhlbCB2YWx1ZSB0byBlbXMuIFBhc3MgYCRiYXNlYCBmb3IgaW5jcmVhc2VkIGFjY3VyYWN5LlxuLy8vXG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkcHh2YWwgICAgICAgICAgICAgICAgICAtIFRoZSBwaXhlbCB2YWx1ZSB0byBjb252ZXJ0LlxuLy8vIEBwYXJhbSAge051bWJlcn0gJGJhc2UgWyRiYXNlLWZvbnQtc2l6ZV0gLSBUaGUgcGl4ZWwgZXF1aXZhbGVudCBvZiBhbmNlc3RvciBmb250IHNpemUuXG4vLy8gQHJldHVybiB7TnVtYmVyfSAgICAgICAgICAgICAgICAgICAgICAgICAtIFRoZSBgZW1gIGZvbnQgc2l6ZS5cbi8vL1xuLy8vIEBsaW5rICAgaHR0cHM6Ly9naXRodWIuY29tL3Rob3VnaHRib3QvYm91cmJvbi9ibG9iL3Y0LXN0YWJsZS9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2Z1bmN0aW9ucy9fcHgtdG8tZW0uc2Nzc1xuQGZ1bmN0aW9uIGVtKCRweHZhbCwgJGJhc2U6ICRiYXNlLWZvbnQtc2l6ZSkge1xuXG5cdEBpZiBub3QgdW5pdGxlc3MoJHB4dmFsKSB7XG5cdFx0JHB4dmFsOiBzdHJpcC11bml0KCRweHZhbCk7XG5cdH1cblxuXHRAaWYgbm90IHVuaXRsZXNzKCRiYXNlKSB7XG5cdFx0JGJhc2U6IHN0cmlwLXVuaXQoJGJhc2UpO1xuXHR9XG5cblx0QHJldHVybiAoJHB4dmFsIC8gJGJhc2UpICogMWVtO1xufVxuXG4vLy8gQ29udmVydCBhIHBpeGVsIHZhbHVlIHRvIHJlbXMuXG4vLy9cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRweHZhbCAtIFRoZSBwaXhlbCB2YWx1ZSB0byBjb252ZXJ0LlxuLy8vIEByZXR1cm4ge051bWJlcn0gICAgICAgIC0gVGhlIGByZW1gIGZvbnQgc2l6ZS5cbi8vL1xuLy8vIEBsaW5rICAgaHR0cHM6Ly9naXRodWIuY29tL3Rob3VnaHRib3QvYm91cmJvbi9ibG9iL3Y0LXN0YWJsZS9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2Z1bmN0aW9ucy9fcHgtdG8tcmVtLnNjc3NcbkBmdW5jdGlvbiByZW0oJHB4dmFsKSB7XG5cblx0QGlmIG5vdCB1bml0bGVzcygkcHh2YWwpIHtcblx0XHQkcHh2YWw6IHN0cmlwLXVuaXQoJHB4dmFsKTtcblx0fVxuXG5cdEByZXR1cm4gKCRweHZhbCAvICRiYXNlLWZvbnQtc2l6ZSkgKiAxcmVtO1xufVxuXG4vLy8gVGludCBhIGNvbG9yIChhZGQgd2hpdGUpIGJ5IGEgc3BlY2lmaWVkIGFtb3VudC5cbi8vL1xuLy8vIEBwYXJhbSAge0NvbG9yfSAgJGNvbG9yICAtIFRoZSBjb2xvciB0byB0aW50LlxuLy8vIEBwYXJhbSAge051bWJlcn0gJGFtb3VudCAtIFRoZSBhbW91bnQgb2Ygd2hpdGUgdG8gYWRkLlxuLy8vIEByZXR1cm4ge0NvbG9yfSAgICAgICAgICAtIFRoZSB0aW50ZWQgY29sb3IuXG5AZnVuY3Rpb24gdGludCgkY29sb3IsICRhbW91bnQpIHtcblxuXHRAcmV0dXJuIG1peCgjZmZmLCAkY29sb3IsICRhbW91bnQpO1xufVxuXG4vLy8gVG9uZSBhIGNvbG9yIChhZGQgZ3JheSkgYnkgYSBzcGVjaWZpZWQgYW1vdW50LlxuLy8vXG4vLy8gQHBhcmFtICB7Q29sb3J9ICAkY29sb3IgICAgICAgICAgLSBUaGUgY29sb3IgdG8gdG9uZS5cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRhbW91bnQgICAgICAgICAtIFRoZSBhbW91bnQgb2YgZ3JheSB0byBhZGQuXG4vLy8gQHBhcmFtICB7Q29sb3J9ICAkZ3JheSBbIzgwODA4MF0gLSBUaGUgZ3JheSB0byBtaXguXG4vLy8gQHJldHVybiB7Q29sb3J9ICAgICAgICAgICAgICAgICAgLSBUaGUgdG9uZWQgY29sb3IuXG4vLy8gQHRvZG8gUmVwbGFjZSBoYXJkY29kZWQgZ3JheSB3aXRoIGRlZmF1bHQgc3BlY2lmaWVkIGluIGBfY29uZmlnLnNjc3NgLlxuQGZ1bmN0aW9uIHRvbmUoJGNvbG9yLCAkYW1vdW50LCAkZ3JheTogIzgwODA4MCkge1xuXG5cdEByZXR1cm4gbWl4KCRncmF5LCAkY29sb3IsICRhbW91bnQpO1xufVxuXG4vLy8gU2hhZGUgYSBjb2xvciAoYWRkIGJsYWNrKSBieSBhIHNwZWNpZmllZCBhbW91bnQuXG4vLy9cbi8vLyBAcGFyYW0gIHtDb2xvcn0gICRjb2xvciAgLSBUaGUgY29sb3IgdG8gc2hhZGUuXG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkYW1vdW50IC0gVGhlIGFtb3VudCBvZiBibGFjayB0byBhZGQuXG4vLy8gQHJldHVybiB7Q29sb3J9ICAgICAgICAgIC0gVGhlIHNoYWRlZCBjb2xvci5cbkBmdW5jdGlvbiBzaGFkZSgkY29sb3IsICRhbW91bnQpIHtcblxuXHRAcmV0dXJuIG1peCgjMDAwLCAkY29sb3IsICRhbW91bnQpO1xufVxuXG4vLy8gR2V0IGEgei1pbmRleCBmcm9tIGEgei1pbmRleCBtYXAuXG4vLy9cbi8vLyBAcGFyYW0gIHtTdHJpbmd9ICRpbmRleCAgICAgICAgLSBUaGUgaW5kZXggdG8gZ2V0LlxuLy8vIEBwYXJhbSAge01hcH0gICAgJHogWyR6LWluZGV4XSAtIFRoZSBtYXAgY29udGFpbmluZyB6LWluZGVjZXMuXG4vLy8gQHJldHVybiB7TnVtYmVyfSAgICAgICAgICAgICAgIC0gVGhlIGNvcnJlc3BvbmRpbmcgei1pbmRleCB2YWx1ZS5cbkBmdW5jdGlvbiB6KCRpbmRleCwgJHo6ICR6LWluZGV4KSB7XG5cblx0QGlmIG5vdCBtYXAtZ2V0KCR6LCAkaW5kZXgpIHtcblxuXHRcdEB3YXJuIFwiTm8gaW5kZXggYCN7aW5zcGVjdCgkaW5kZXgpfWAgZm91bmQhXCI7XG5cdH1cblxuXHRAcmV0dXJuIG1hcC1nZXQoJHosICRpbmRleCk7XG59XG5cbi8vLyBDYWxjdWxhdGUgdGhlIGx1bWluYW5jZSBvZiBhIGdpdmVuIGNvbG9yLlxuLy8vXG4vLy8gQHBhcmFtICB7Q29sb3J9ICAkY29sb3IgLSBUaGUgY29sb3IgdG8gY2hlY2suXG4vLy8gQHJldHVybiB7TnVtYmVyfSAgICAgICAgLSBUaGUgY29sb3JcInMgbHVtaW5hbmNlLlxuLy8vXG4vLy8gQGxpbmsgICBodHRwczovL3d3dy53My5vcmcvVFIvV0NBRzIwLVRFQ0hTL0cxNy5odG1sI0cxNy10ZXN0c1xuQGZ1bmN0aW9uIGx1bWluYW5jZSgkY29sb3IpIHtcblx0JHJlZDogcmVkKCRjb2xvcikgKiAwLjIxMjY7XG5cdCRncmVlbjogZ3JlZW4oJGNvbG9yKSAqIDAuNzE1Mjtcblx0JGJsdWU6IGJsdWUoJGNvbG9yKSAqIDAuMDcyMjtcblxuXHRAcmV0dXJuICRyZWQgKyAkZ3JlZW4gKyAkYmx1ZTtcbn1cblxuLy8vIENhbGN1bGF0ZSB0aGUgY29udHJhc3QgYmV0d2VlbiB0d28gY29sb3JzLlxuLy8vXG4vLy8gQHBhcmFtICB7Q29sb3J9ICAkY29sb3IxIC0gVGhlIGZpcnN0IGNvbG9yIHRvIGNoZWNrLlxuLy8vIEBwYXJhbSAge0NvbG9yfSAgJGNvbG9yMiAtIFRoZSBzZWNvbmQgY29sb3IgdG8gY2hlY2suXG4vLy8gQHJldHVybiB7TnVtYmVyfSAgICAgICAgIC0gVGhlIGNvbnRyYXN0IHJhdGlvIGJldHdlZW4gdGhlIHR3byBjb2xvcnMuXG4vLy9cbi8vLyBAbGluayAgIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9XQ0FHMjAtVEVDSFMvRzE3Lmh0bWwjRzE3LXRlc3RzXG5AZnVuY3Rpb24gY2FsY3VsYXRlLWNvbnRyYXN0KCRjb2xvcjEsICRjb2xvcjIpIHtcblxuXHQkY29sb3IxOiBsdW1pbmFuY2UoJGNvbG9yMSkgKyAwLjA1O1xuXHQkY29sb3IyOiBsdW1pbmFuY2UoJGNvbG9yMikgKyAwLjA1O1xuXG5cdEByZXR1cm4gbWF4KCRjb2xvcjEsICRjb2xvcjIpIC8gbWluKCRjb2xvcjEsICRjb2xvcjIpO1xufVxuXG4vLy8gQ2hvb3NlcyB0aGUgY29sb3Igd2l0aCB0aGUgYmVzdCBjb250cmFzdCBmb3IgdGhlIGJhc2UuXG4vLy9cbi8vLyBAcGFyYW0gIHtDb2xvcn0gJGJhc2UtY29sb3IgICAgICAgICAgICAgICAgICAtIFRoZSBjb2xvciBhZ2FpbnN0IHdoaWNoIHRvIGNoZWNrLlxuLy8vIEBwYXJhbSAge0NvbG9yfSAkbGlnaHQgWyR0ZXh0LWRlZmF1bHQtbGlnaHRdIC0gVGhlIGxpZ2h0IGNvbG9yIGFnYWluc3Qgd2hpY2ggdG8gY2hlY2suXG4vLy8gQHBhcmFtICB7Q29sb3J9ICRkYXJrICBbJHRleHQtZGVmYXVsdC1kYXJrXSAgLSBUaGUgZGFyayBjb2xvciBhZ2FpbnN0IHdoaWNoIHRvIGNoZWNrLlxuLy8vIEByZXR1cm4ge0NvbG9yfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0gVGhlIGNvbG9yIHdpdGggdGhlIGJldHRlciBjb250cmFzdC5cbi8vL1xuLy8vIEBsaW5rICAgaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC1URUNIUy9HMTcuaHRtbCNHMTctdGVzdHNcbkBmdW5jdGlvbiBjb250cmFzdCgkYmFzZS1jb2xvciwgJGxpZ2h0OiAkdGV4dC1kZWZhdWx0LWxpZ2h0LCAkZGFyazogJHRleHQtZGVmYXVsdC1kYXJrKSB7XG5cdCRjb250cmFzdC1saWdodDogY2FsY3VsYXRlLWNvbnRyYXN0KCRiYXNlLWNvbG9yLCAkbGlnaHQpO1xuXHQkY29udHJhc3QtZGFyazogY2FsY3VsYXRlLWNvbnRyYXN0KCRiYXNlLWNvbG9yLCAkZGFyayk7XG5cblx0QGlmICgkY29udHJhc3QtbGlnaHQgPiAkY29udHJhc3QtZGFyaykge1xuXG5cdFx0QHJldHVybiAkbGlnaHQ7XG5cdH0gQGVsc2Uge1xuXG5cdFx0QHJldHVybiAkZGFyaztcblx0fVxufVxuIiwiLy8gVVRJTElUSUVTXG5cbi8vLyBBbHdheXMgY2xlYXIgZmxvYXRzLlxuLy8vXG4vLy8gQGV4YW1wbGUgLSBzY3NzIFVzYWdlXG4vLy8gIEBpbmNsdWRlIGNsZWFyZml4O1xuLy8vXG4vLy8gQGxpbmsgaHR0cDovL25pY29sYXNnYWxsYWdoZXIuY29tL21pY3JvLWNsZWFyZml4LWhhY2svXG5AbWl4aW4gY2xlYXJmaXgge1xuXHQqem9vbTogMTtcblxuXHQmOmFmdGVyLFxuXHQmOmJlZm9yZSB7XG5cdFx0Y29udGVudDogXCIgXCI7XG5cdFx0ZGlzcGxheTogdGFibGU7XG5cdH1cblxuXHQmOmFmdGVyIHtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufVxuXG4vLy8gUmVtb3ZlcyBsaXN0IGRlbGltaXRlcnMsIG1hcmdpbiwgYW5kIHBhZGRpbmcgZnJvbSBgdWxgIG9yIGBvbGAgZWxlbWVudHMuXG4vLy9cbi8vLyBAZXhhbXBsZSAtIHNjc3MgVXNhZ2Vcbi8vLyAgQGluY2x1ZGUgbGlzdC1yZXNldFxuQG1peGluIGxpc3QtcmVzZXQge1xuXHRsaXN0LXN0eWxlOiBub25lO1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG59XG5cbi8vLyBFeHRlbmQgYW4gZWxlbWVudCB0byB0aGUgZWRnZSBvZiB0aGUgdmlld3BvcnQgd2hlbiB0aGUgcGFyZW50IGhhcyBhIGZpeGVkIHdpZHRoLlxuLy8vXG4vLy8gQGV4YW1wbGUgLSBzY3NzIFVzYWdlXG4vLy8gIEBpbmNsdWRlIGZ1bGwtd2lkdGhcbi8vL1xuLy8vIEBsaW5rIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vZnVsbC13aWR0aC1jb250YWluZXJzLWxpbWl0ZWQtd2lkdGgtcGFyZW50cy9cbkBtaXhpbiBmdWxsLXdpZHRoIHtcblx0bGVmdDogNTAlO1xuXHRtYXJnaW4tbGVmdDogLTUwdnc7XG5cdG1hcmdpbi1yaWdodDogLTUwdnc7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0cmlnaHQ6IDUwJTtcblx0d2lkdGg6IDEwMHZ3O1xufVxuXG4vLy8gVmlzdWFsbHkgaGlkZXMgdGV4dCwgYnV0IHRleHQgaXMgc3RpbGwgYXZhaWxhYmxlIGZvciBzY3JlZW4gcmVhZGVycy4gVGV4dCBpcyBub3QgZm9jdXNhYmxlLlxuLy8vXG4vLy8gQGV4YW1wbGUgLSBzY3NzIFVzYWdlXG4vLy8gIEBpbmNsdWRlIHNjcmVlbi1yZWFkZXItdGV4dFxuQG1peGluIHNjcmVlbi1yZWFkZXItdGV4dCB7XG5cdGJvcmRlcjogMDtcblx0Y2xpcDogcmVjdCgwIDAgMCAwKTtcblx0aGVpZ2h0OiAxcHg7XG5cdG1hcmdpbjogLTFweDtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0cGFkZGluZzogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR3aWR0aDogMXB4O1xufVxuXG4vLy8gVmlzdWFsbHkgaGlkZXMgdGV4dCwgYnV0IGl0XCJzIHN0aWxsIGF2YWlsYWJsZSBmb3Igc2NyZWVuIHJlYWRlcnMsIGFuZCBpcyBzdGlsbCBmb2N1c2FibGUuXG4vLy9cbi8vLyBAZXhhbXBsZSAtIHNjc3MgVXNhZ2Vcbi8vLyAgQGluY2x1ZGUgc2NyZWVuLXJlYWRlci10ZXh0LWZvY3VzYWJsZVxuQG1peGluIHNjcmVlbi1yZWFkZXItdGV4dC1mb2N1c2FibGUge1xuXG5cdCY6Zm9jdXMge1xuXHRcdGJvcmRlcjogYXV0bztcblx0XHRjbGlwOiBhdXRvO1xuXHRcdGhlaWdodDogYXV0bztcblx0XHRtYXJnaW46IDA7XG5cdFx0b3ZlcmZsb3c6IHZpc2libGU7XG5cdFx0cG9zaXRpb246IHN0YXRpYztcblx0XHR3aWR0aDogYXV0bztcblx0fVxufVxuXG4vLy8gQ2VudGVycyBhIGJhY2tncm91bmQgaW1hZ2UsIGFuZCBtYWtlcyBzdXJlIGl0IGNvdmVycyBpdHMgY29udGFpbmVyLlxuLy8vXG4vLy8gQGV4YW1wbGUgLSBzY3NzIFVzYWdlXG4vLy8gIEBpbmNsdWRlIGltYWdlLWFzLWJhY2tncm91bmRcbkBtaXhpbiBpbWFnZS1hcy1iYWNrZ3JvdW5kIHtcblx0YmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuXHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4vLy8gRGVjbGFyZSB0aGUgZWxlbWVudCBgaGVpZ2h0YCBhbmQgYHdpZHRoYC5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkd2lkdGggICAgICAgICAgIC0gVGhlIGVsZW1lbnQgd2lkdGguXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRoZWlnaHQgWyR3aWR0aF0gLSBUaGUgZWxlbWVudCBoZWlnaHQuXG4vLy9cbi8vLyBAZXhhbXBsZSAtIHNjc3MgVXNhZ2Vcbi8vLyAgLmVsIHtcbi8vLyAgICBAaW5jbHVkZSBzaXplKDUwcHgsIDE1MHB4KTtcbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgLSBjc3MgT3V0cHV0XG4vLy8gIC5lbCB7XG4vLy8gICAgaGVpZ2h0OiAxNTBweDtcbi8vLyAgICB3aWR0aDogNTBweDtcbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgLSBzY3NzIFVzYWdlXG4vLy8gIC5lbCB7XG4vLy8gICAgQGluY2x1ZGUgc2l6ZSg1MHB4KTtcbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgLSBjc3MgT3V0cHV0XG4vLy8gIC5lbCB7XG4vLy8gICAgaGVpZ2h0OiA1MHB4O1xuLy8vICAgIHdpZHRoOiA1MHB4O1xuLy8vICB9XG5AbWl4aW4gc2l6ZSgkd2lkdGgsICRoZWlnaHQpIHtcblxuXHRAaWYgbm90ICRoZWlnaHQge1xuXHRcdCRoZWlnaHQ6ICR3aWR0aDtcblx0fVxuXG5cdGhlaWdodDogJGhlaWdodDtcblx0d2lkdGg6ICR3aWR0aDtcbn1cblxuLy8vIFNldCBhbiBhc3BlY3QgcmF0aW8gb24gYW4gZWxlbWVudC5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkd2lkdGggICAgLSBUaGUgd2lkdGggcmF0aW8sIHRoaXMgdmFsdWUgc2hvdWxkIGJlIHVuaXRsZXNzLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkaGVpZ2h0ICAgLSBUaGUgaGVpZ2h0IHJhdGlvLCB0aGlzIHZhbHVlIHNob3VsZCBiZSB1bml0bGVzcy5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGVsLXdpZHRoIC0gVGhlIGVsZW1lbnQgd2lkdGguXG4vLy9cbi8vLyBAZXhhbXBsZSAtIHNjc3MgVXNhZ2UgZm9yIDM6MiByYXRpb1xuLy8vICAuZWwge1xuLy8vICAgIEBpbmNsdWRlIGFzcGVjdC1yYXRpbygzLCAyLCA1MCUpO1xuLy8vICB9XG5AbWl4aW4gYXNwZWN0LXJhdGlvKCR3aWR0aCwgJGhlaWdodCwgJGVsLXdpZHRoKSB7XG5cblx0QGluY2x1ZGUgc2l6ZSgkZWwtd2lkdGgsIDApO1xuXG5cdHBhZGRpbmctdG9wOiAkaGVpZ2h0IC8gJHdpZHRoICogJGVsLXdpZHRoO1xufVxuIiwiLy8gTkFWSUdBVElPTlxuXG4ucHJpbWFyeS1tZW51IHtcblxuXHRAaW5jbHVkZSBzbGlkZS1kb3duKFwiLnRvZ2dsZWQgJlwiKTtcblxuXHRAaW5jbHVkZSBtcS1taW4oJHRhYmxldC1sYW5kc2NhcGUpIHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG5cdFx0bWF4LWhlaWdodDogMTAwJTtcblx0XHRvdmVyZmxvdzogdmlzaWJsZTtcblx0fVxufVxuXG4ubWVudS10b2dnbGUge1xuXG5cdEBpbmNsdWRlIG1xLW1pbigkdGFibGV0LWxhbmRzY2FwZSkge1xuXHRcdGRpc3BsYXk6IG5vbmU7XG5cdH1cbn1cblxuLm1lbnUsXG4uc3ViLW1lbnUge1xuXG5cdEBpbmNsdWRlIGxpc3QtcmVzZXQ7XG59XG5cbi5tZW51ID4gLm1lbnUtaXRlbSB7XG5cblx0QGluY2x1ZGUgbXEtbWluKCR0YWJsZXQtbGFuZHNjYXBlKSB7XG5cblx0XHQrIC5tZW51LWl0ZW0ge1xuXHRcdFx0bWFyZ2luLWxlZnQ6IDIwcHg7XG5cdFx0fVxuXHR9XG59XG5cbi5zdWItbWVudSB7XG5cblx0QGluY2x1ZGUgc2xpZGUtZG93bigkc3RhdGU6IFwiLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW46aG92ZXIgPiAmXCIgXCIubWVudS1pdGVtLWhhcy1jaGlsZHJlbi5mb2N1cyA+ICZcIik7XG5cblx0QGluY2x1ZGUgbXEtbWluKCR0YWJsZXQtbGFuZHNjYXBlKSB7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdHRvcDogMTAwJTtcblx0fVxufVxuXG4ubWVudS1pdGVtLWhhcy1jaGlsZHJlbiB7XG5cdHBhZGRpbmctcmlnaHQ6IDI0cHg7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuXHQmOmFmdGVyIHtcblx0XHRiYWNrZ3JvdW5kOiB1cmwoLi4vaWNvbnMvY2hldnJvbi1kb3duLnN2Zykgbm8tcmVwZWF0O1xuXHRcdGNvbnRlbnQ6IFwiXCI7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0aGVpZ2h0OiAyNHB4O1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRyaWdodDogMDtcblx0XHR0b3A6IDA7XG5cdFx0d2lkdGg6IDI0cHg7XG5cblx0XHRAc3VwcG9ydHMgKG1hc2staW1hZ2U6IG5vbmUpIG9yICgtd2Via2l0LW1hc2staW1hZ2U6IG5vbmUpIHtcblx0XHRcdGJhY2tncm91bmQ6IG5vbmU7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdFx0XHRtYXNrLWltYWdlOiB1cmwoLi4vaWNvbnMvY2hldnJvbi1kb3duLnN2Zyk7XG5cdFx0fVxuXHR9XG59XG4iLCIvLyBFRkZFQ1RTXG5cbi8vLyBVc2UgQ1NTIHRvIG1pbWljIHRoZSBqUXVlcnkgU2xpZGUgVG9nZ2xlIEVmZmVjdC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfExpc3R9ICRzdGF0ZSBbaG92ZXJdIC0gV2hhdCBhY3Rpb24ocykgb3Igc2VsZWN0b3IocykgdHJpZ2dlcnMgb3VyIHNsaWRlIGRvd24gZWZmZWN0LlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkZHVyYXRpb24gWzAuNXNdIC0gVGhlIGR1cmF0aW9uIG9mIHRoZSBzbGlkZSBldmVudC5cbi8vL1xuLy8vIEBleGFtcGxlIC0gU2FzcyBVc2FnZSB3aXRoIGxpc3Qgb2Ygc2VsZWN0b3JzXG4vLy8gIEBpbmNsdWRlIHNsaWRlLWRvd24oJHN0YXRlOiAnLml0ZW0uZm9jdXMgJicgJy5pdGVtOmhvdmVyICYnKTtcbkBtaXhpbiBzbGlkZS1kb3duKCRzdGF0ZTogaG92ZXIsICRkdXJhdGlvbjogMC41cykge1xuXHRtYXgtaGVpZ2h0OiAwO1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHR0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0ICRkdXJhdGlvbiBlYXNlLWluLW91dDtcblxuXHRAaWYgKCRzdGF0ZSA9PSBob3Zlcikge1xuXG5cdFx0Jjpob3ZlciB7XG5cdFx0XHRtYXgtaGVpZ2h0OiAxMDB2aDtcblx0XHRcdG92ZXJmbG93OiB2aXNpYmxlO1xuXHRcdH1cblx0fSBAZWxzZSBpZiAodHlwZS1vZigkc3RhdGUpID09IGxpc3QpIHtcblxuXHRcdEBlYWNoICRpdGVtIGluICRzdGF0ZSB7XG5cblx0XHRcdEBpZiAoJGl0ZW0gPT0gaG92ZXIpIHtcblxuXHRcdFx0XHQmOmhvdmVyIHtcblx0XHRcdFx0XHRtYXgtaGVpZ2h0OiAxMDB2aDtcblx0XHRcdFx0XHRvdmVyZmxvdzogdmlzaWJsZTtcblx0XHRcdFx0fVxuXHRcdFx0fSBAZWxzZSB7XG5cblx0XHRcdFx0I3skaXRlbX0ge1xuXHRcdFx0XHRcdG1heC1oZWlnaHQ6IDEwMHZoO1xuXHRcdFx0XHRcdG92ZXJmbG93OiB2aXNpYmxlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9IEBlbHNlIHtcblxuXHRcdCN7JHN0YXRlfSB7XG5cdFx0XHRtYXgtaGVpZ2h0OiAxMDB2aDtcblx0XHR9XG5cdH1cbn1cbiIsIi8vIFNJVEUgSEVBREVSXG5cbi5zaXRlLWhlYWRlciB7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdHBhZGRpbmc6ICRndXR0ZXI7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblxuXHRAaW5jbHVkZSBtcS1taW4oJHRhYmxldC1sYW5kc2NhcGUpIHtcblx0XHRmbGV4LWRpcmVjdGlvbjogcm93O1xuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHR9XG59XG4iLCIvLyBNRURJQSBRVUVSSUVTXG5cbi8vLyBDcmVhdGUgYSBgbWluLXdpZHRoYCBtZWRpYSBxdWVyeS5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkbWluIC0gVGhlIGxlbmd0aCB0byBiZSB1c2VkLlxuLy8vXG4vLy8gQGV4YW1wbGUgLSBzY3NzIFVzYWdlXG4vLy8gIEBpbmNsdWRlIG1xLW1pbigkZGVza3RvcCkgey4uLn1cbkBtaXhpbiBtcS1taW4oJG1pbikge1xuXG5cdEBpZiB0eXBlLW9mKCRtaW4pICE9IFwibnVtYmVyXCIge1xuXG5cdFx0QGVycm9yIFwiJG1pbiBpcyBub3QgYSBsZW5ndGggdW5pdC5cIjtcblx0fVxuXG5cdEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJG1pbikge1xuXG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuLy8vIENyZWF0ZSBhIGBtYXgtd2lkdGhgIG1lZGlhIHF1ZXJ5LlxuLy8vIGBtYXgtd2lkdGhgIHN1YnRyYWN0cyAxIHVuaXQgdG8gYXZvaWQgY29uZmxpY3RzIHdpdGggYG1pbi13aWR0aGAgcXVlcmllcy5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkbWluIC0gVGhlIGxlbmd0aCB0byBiZSB1c2VkLlxuLy8vXG4vLy8gQGV4YW1wbGUgLSBzY3NzIFVzYWdlXG4vLy8gIEBpbmNsdWRlIG1xLW1pbigkZGVza3RvcCkgey4uLn1cbkBtaXhpbiBtcS1tYXgoJG1heCkge1xuXG5cdEBpZiB0eXBlLW9mKCRtYXgpICE9IFwibnVtYmVyXCIge1xuXG5cdFx0QGVycm9yIFwiJG1heCBpcyBub3QgYSBsZW5ndGggdW5pdC5cIjtcblx0fVxuXG5cdEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogJG1heCAtIDEpIHtcblxuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cbi8vLyBDcmVhdGUgYSBtZWRpYSBxdWVyeSByYW5nZSAoYmV0d2VlbiBgbWluLXdpZHRoYCBhbmQgYG1heC13aWR0aGApLlxuLy8vIGBtYXgtd2lkdGhgIHN1YnRyYWN0cyAxIHVuaXQgdG8gYXZvaWQgY29uZmxpY3RzIHdpdGggYG1pbi13aWR0aGAgcXVlcmllcy5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkbWluIC0gVGhlIG1pbmltdW0gYnJlYWtwb2ludC5cbi8vLyBAcGFyYW0ge051bWJlcn0gJG1heCAtIFRoZSBtYXhpbXVtIGJyZWFrcG9pbnQuXG4vLy9cbi8vLyBAZXhhbXBsZSAtIHNjc3MgVXNhZ2Vcbi8vLyAgQGluY2x1ZGUgKCR0YWJsZXQtcG9ydHJhaXQsICR0YWJsZXQtbGFuZHNjYXBlKSB7Li4ufVxuQG1peGluIG1xKCRtaW46IG51bGwsICRtYXg6IG51bGwpIHtcblxuXHRAaWYgJG1pbiA9PSBudWxsIHtcblxuXHRcdEBpbmNsdWRlIG1xLW1heCgkbWF4KSB7XG5cblx0XHRcdEBjb250ZW50O1xuXHRcdH1cblx0fSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuXG5cdFx0QGluY2x1ZGUgbXEtbWluKCRtaW4pIHtcblxuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9IEBlbHNlIHtcblxuXHRcdEBpZiB0eXBlLW9mKCRtaW4pICE9IFwibnVtYmVyXCIgYW5kIHR5cGUtb2YoJG1heCkgIT0gXCJudW1iZXJcIiB7XG5cblx0XHRcdEBlcnJvciBcIk9uZSBvZiB0aGUgcGFyYW1ldGVycyBpcyBub3QgYSBsZW5ndGggdW5pdC5cIjtcblx0XHR9XG5cblx0XHRAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4IC0gMSkge1xuXG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH1cbn1cbiJdfQ== */
/*# sourceMappingURL=main.css.map*/