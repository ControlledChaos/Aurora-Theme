/*! This file is autogenerated with Webpack. DO NOT EDIT DIRECTLY. */
/*!
Theme Name: Aurora Theme
Theme URI: http://underscores.me/
Author: Carrie Forde
Author URI: https://carrieforde.com
Description: Description
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: LICENSE
Text Domain: aurora-theme
Tags: custom-background, custom-logo, custom-menu, featured-images, threaded-comments, translation-ready

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun,
and share what you've learned withothers.

Aurora Theme is based on Underscores https://underscores.me/, (C) 2012-2017 Automattic, Inc.
Underscores is distributed under the terms of the GNU GPL v2 or later.
*/
/*! sanitize.css v4.1.0 | CC0 License | github.com/jonathantneal/sanitize.css */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

template,
[hidden] {
  display: none; }

*,
::before,
::after {
  background-repeat: no-repeat;
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  cursor: default;
  font-family: sans-serif;
  line-height: 1.5;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

h1 {
  font-size: 2em;
  margin: .67em 0; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

hr {
  height: 0;
  overflow: visible; }

nav ol,
nav ul {
  list-style: none; }

abbr[title] {
  border-bottom: 1px dotted;
  text-decoration: none; }

b,
strong {
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

dfn {
  font-style: italic; }

mark {
  background-color: #ff0;
  color: #000; }

progress {
  vertical-align: baseline; }

small {
  font-size: 83.3333%; }

sub,
sup {
  font-size: 83.3333%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

::-moz-selection {
  background-color: #b3d4fc;
  color: #000;
  text-shadow: none; }

::selection {
  background-color: #b3d4fc;
  color: #000;
  text-shadow: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

img {
  border-style: none; }

svg {
  fill: currentColor; }
  svg:not(:root) {
    overflow: hidden; }

a {
  background-color: transparent;
  -webkit-text-decoration-skip: objects; }
  a:hover {
    outline-width: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

button,
input,
select,
textarea {
  background-color: transparent;
  border-style: none;
  color: inherit;
  font-size: 1em;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html [type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

::-moz-focus-inner {
  border-style: none;
  padding: 0; }

:-moz-focusring {
  outline: 1px dotted ButtonText; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: .35em .625em .75em; }

legend {
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal; }

textarea {
  overflow: auto;
  resize: vertical; }

[type='checkbox'],
[type='radio'] {
  padding: 0; }

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto; }

[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

::-webkit-search-cancel-button,
::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-input-placeholder {
  color: inherit;
  opacity: .54; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

[aria-busy='true'] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-disabled] {
  cursor: default; }

a,
area,
button,
input,
label,
select,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  touch-action: manipulation; }

[hidden][aria-hidden='false'] {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute; }
  [hidden][aria-hidden='false']:focus {
    clip: auto; }

html {
  font-size: "16px"; }

body {
  -webkit-font-smoothing: antialiased;
  background-color: #fff;
  color: #222;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  line-height: 1.5; }

a {
  color: #0e3cda;
  -webkit-transition: color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out; }
  a:visited {
    color: #0e3cda; }
  a:hover {
    color: #458dfe; }

img {
  height: auto;
  max-width: 100%; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jYXJyaWUvRGVza3RvcC9Xb3JkUHJlc3MvYXVyb3JhL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvYXVyb3JhLXRoZW1lL3NyYy9hc3NldHMvc2Fzcy9zdHlsZS5zY3NzIiwiL1VzZXJzL2NhcnJpZS9EZXNrdG9wL1dvcmRQcmVzcy9hdXJvcmEvYXBwL3B1YmxpYy93cC1jb250ZW50L3RoZW1lcy9hdXJvcmEtdGhlbWUvbm9kZV9tb2R1bGVzL3Nhbml0aXplLnNjc3MvX3Nhbml0aXplLnNjc3MiLCJzdHlsZS5zY3NzIiwiL1VzZXJzL2NhcnJpZS9EZXNrdG9wL1dvcmRQcmVzcy9hdXJvcmEvYXBwL3B1YmxpYy93cC1jb250ZW50L3RoZW1lcy9hdXJvcmEtdGhlbWUvc3JjL2Fzc2V0cy9zYXNzL19iYXNlLnNjc3MiLCIvVXNlcnMvY2FycmllL0Rlc2t0b3AvV29yZFByZXNzL2F1cm9yYS9hcHAvcHVibGljL3dwLWNvbnRlbnQvdGhlbWVzL2F1cm9yYS10aGVtZS9zcmMvYXNzZXRzL3Nhc3MvX2NvbmZpZy5zY3NzIiwiL1VzZXJzL2NhcnJpZS9EZXNrdG9wL1dvcmRQcmVzcy9hdXJvcmEvYXBwL3B1YmxpYy93cC1jb250ZW50L3RoZW1lcy9hdXJvcmEtdGhlbWUvc3JjL2Fzc2V0cy9zYXNzL3V0aWxpdGllcy9fZnVuY3Rpb25zLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQWtCRTtBQ2xCRixnRkFBZ0Y7QUFRaEY7Ozs7Ozs7Ozs7OztFQVlFLGVBQWMsRUFDZjs7QUFHRDs7OztFQUlFLHNCQUFxQixFQUN0Qjs7QUFHRDtFQUVJLGNBQWE7RUFDYixVQUFTLEVBQ1Y7O0FBS0g7O0VBRUUsY0FBYSxFQUNkOztBQU9EOzs7RUFHRSw2QkFBNEI7RUFDNUIsNEJBQW1CO1VBQW5CLG9CQUFtQixFQUNwQjs7QUFJRDs7RUFFRSx5QkFBd0I7RUFDeEIsd0JBQXVCLEVBQ3hCOztBQU1EO0VBQ0UsK0JB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IVxuVGhlbWUgTmFtZTogQXVyb3JhIFRoZW1lXG5UaGVtZSBVUkk6IGh0dHA6Ly91bmRlcnNjb3Jlcy5tZS9cbkF1dGhvcjogQ2FycmllIEZvcmRlXG5BdXRob3IgVVJJOiBodHRwczovL2NhcnJpZWZvcmRlLmNvbVxuRGVzY3JpcHRpb246IERlc2NyaXB0aW9uXG5WZXJzaW9uOiAxLjAuMFxuTGljZW5zZTogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjIgb3IgbGF0ZXJcbkxpY2Vuc2UgVVJJOiBMSUNFTlNFXG5UZXh0IERvbWFpbjogYXVyb3JhLXRoZW1lXG5UYWdzOiBjdXN0b20tYmFja2dyb3VuZCwgY3VzdG9tLWxvZ28sIGN1c3RvbS1tZW51LCBmZWF0dXJlZC1pbWFnZXMsIHRocmVhZGVkLWNvbW1lbnRzLCB0cmFuc2xhdGlvbi1yZWFkeVxuXG5UaGlzIHRoZW1lLCBsaWtlIFdvcmRQcmVzcywgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEdQTC5cblVzZSBpdCB0byBtYWtlIHNvbWV0aGluZyBjb29sLCBoYXZlIGZ1bixcbmFuZCBzaGFyZSB3aGF0IHlvdSd2ZSBsZWFybmVkIHdpdGhvdGhlcnMuXG5cbkF1cm9yYSBUaGVtZSBpcyBiYXNlZCBvbiBVbmRlcnNjb3JlcyBodHRwczovL3VuZGVyc2NvcmVzLm1lLywgKEMpIDIwMTItMjAxNyBBdXRvbWF0dGljLCBJbmMuXG5VbmRlcnNjb3JlcyBpcyBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHUEwgdjIgb3IgbGF0ZXIuXG4qL1xuXG4vLyBDb25maWdcbkBpbXBvcnQgXCJjb25maWdcIjtcblxuLy8gRnVuY3Rpb25zXG5AaW1wb3J0IFwidXRpbGl0aWVzL2Z1bmN0aW9uc1wiO1xuXG4vLyBNaXhpbnNcbkBpbXBvcnQgXCJ1dGlsaXRpZXMvbWl4aW5zL2NvbG9yXCI7XG5AaW1wb3J0IFwidXRpbGl0aWVzL21peGlucy9sYXlvdXRcIjtcbkBpbXBvcnQgXCJ1dGlsaXRpZXMvbWl4aW5zL3V0aWxpdGllc1wiO1xuQGltcG9ydCBcInV0aWxpdGllcy9taXhpbnMvbWVkaWEtcXVlcmllc1wiO1xuQGltcG9ydCBcInV0aWxpdGllcy9taXhpbnMvYnV0dG9uc1wiO1xuQGltcG9ydCBcInV0aWxpdGllcy9taXhpbnMvbGlua3NcIjtcblxuLy8gUmVzZXRcbkBpbXBvcnQgXCJzYW5pdGl6ZVwiO1xuXG4vLyBCYXNlXG5AaW1wb3J0IFwiYmFzZVwiO1xuIiwiLyohIHNhbml0aXplLmNzcyB2NC4xLjAgfCBDQzAgTGljZW5zZSB8IGdpdGh1Yi5jb20vam9uYXRoYW50bmVhbC9zYW5pdGl6ZS5jc3MgKi9cblxuLy8gRGlzcGxheSBkZWZpbml0aW9uc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4vLyAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4vLyAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8vIDFcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvLyAyXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvLyAxXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vLyBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLy8gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbmF1ZGlvIHtcbiAgJjpub3QoW2NvbnRyb2xzXSkge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbi8vIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxudGVtcGxhdGUsIC8vIDFcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLy8gIEVsZW1lbnRzIG9mIEhUTUwgKGh0dHBzOi8vd3d3LnczLm9yZy9UUi9odG1sNS9zZW1hbnRpY3MuaHRtbClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIFJlbW92ZSByZXBlYXRpbmcgYmFja2dyb3VuZHMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4vLyAyLiBBZGQgYm94IHNpemluZyBpbmhlcml0ZW5jZSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiosXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyAvLyAxXG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IC8vIDJcbn1cblxuLy8gMS4gQWRkIHRleHQgZGVjb3JhdGlvbiBpbmhlcml0YW5jZSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbi8vIDIuIEFkZCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW5oZXJpdGVuY2UgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7IC8vIDFcbiAgdmVydGljYWwtYWxpZ246IGluaGVyaXQ7IC8vIDJcbn1cblxuLy8gMS4gQWRkIGJvcmRlciBib3ggc2l6aW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuLy8gMi4gQWRkIHRoZSBkZWZhdWx0IGN1cnNvciBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbi8vIDMuIEFkZCBhIGZsYXR0ZW5lZCBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbi8vIDQuIFByZXZlbnQgZm9udCBzaXplIGFkanVzdG1lbnRzIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvLyAxXG4gIGN1cnNvcjogZGVmYXVsdDsgLy8gMlxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLy8gM1xuICBsaW5lLWhlaWdodDogMS41OyAvLyAzXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvLyA0XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gNVxufVxuXG4vLyAgU2VjdGlvbnMgKGh0dHBzOi8vd3d3LnczLm9yZy9UUi9odG1sNS9zZWN0aW9ucy5odG1sKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vLyBDb3JyZWN0IHRoZSBmb250IHNpemVzIGFuZCBtYXJnaW5zIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluXG4vLyBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IC42N2VtIDA7XG59XG5cbi8vICBHcm91cGluZyBjb250ZW50IChodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDUvZ3JvdXBpbmctY29udGVudC5odG1sKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gQ29ycmVjdCBmb250IHNpemluZyBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBpbiBhbGwgYnJvd3NlcnMuXG4vLyAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLy8gMVxuICBmb250LXNpemU6IDFlbTsgLy8gMlxufVxuXG4vLyAxLiBDb3JyZWN0IHRoZSBoZWlnaHQgaW4gRmlyZWZveC5cbi8vIDIuIEFkZCB2aXNpYmxlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuaHIge1xuICBoZWlnaHQ6IDA7IC8vIDFcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8vIDJcbn1cblxuLy8gUmVtb3ZlIHRoZSBsaXN0IHN0eWxlIG9uIG5hdmlnYXRpb24gbGlzdHMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG5uYXYge1xuICBvbCxcbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIH1cbn1cblxuLy8gIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBBZGQgYSBib3JkZXJlZCB1bmRlcmxpbmUgZWZmZWN0IGluIGFsbCBicm93c2Vycy5cbi8vIDIuIFJlbW92ZSB0ZXh0IGRlY29yYXRpb24gaW4gRmlyZWZveCA0MCsuXG5hYmJyIHtcbiAgJlt0aXRsZV0ge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IC8vIDFcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IC8vIDJcbiAgfVxufVxuXG4vLyBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLy8gQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vLyBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCBjb2xvcnMgaW4gSUUgOS0uXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLy8gQ29ycmVjdCB0aGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4My4zMzMzJTtcbn1cblxuLy8gQ2hhbmdlIHRoZSBwb3NpdGlvbmluZyBvbiBzdXBlcnNjcmlwdCBhbmQgc3Vic2NyaXB0IGVsZW1lbnRzXG4vLyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbi8vIDEuIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDgzLjMzMzMlOyAvLyAxXG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLS41ZW07XG59XG5cblxuLy8gUmVtb3ZlIHRoZSB0ZXh0IHNoYWRvdyBvbiB0ZXh0IHNlbGVjdGlvbnMgKG9waW5pb25hdGVkKS5cbi8vIDEuIFJlc3RvcmUgdGhlIGNvbG9yaW5nIHVuZG9uZSBieSBkZWZpbmluZyB0aGUgdGV4dCBzaGFkb3cgKG9waW5pb25hdGVkKS5cbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNkNGZjOyAvLyAxXG4gIGNvbG9yOiAjMDAwOyAvLyAxXG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiM2Q0ZmM7IC8vIDFcbiAgY29sb3I6ICMwMDA7IC8vIDFcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG5cbi8vICBFbWJlZGRlZCBjb250ZW50IChodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDUvZW1iZWRkZWQtY29udGVudC0wLmh0bWwpXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDaGFuZ2UgdGhlIGFsaWdubWVudCBvbiBtZWRpYSBlbGVtZW50cyBpbiBhbGwgYnJvd2VycyAob3BpbmlvbmF0ZWQpLlxuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi8vIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vLyBDaGFuZ2UgdGhlIGZpbGwgY29sb3IgdG8gbWF0Y2ggdGhlIHRleHQgY29sb3IgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG5zdmcge1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG5cbiAgLy8gSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUVcbiAgJjpub3QoOnJvb3QpIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG59XG5cbi8vICBMaW5rcyAoaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L2xpbmtzLmh0bWwjbGlua3MpXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4vLyAyLiBSZW1vdmUgdGhlIGdhcHMgaW4gdW5kZXJsaW5lcyBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLy8gMVxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvLyAyXG5cbiAgLy8gUmVtb3ZlIHRoZSBvdXRsaW5lIHdoZW4gaG92ZXJpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gICY6aG92ZXIge1xuICAgIG91dGxpbmUtd2lkdGg6IDA7XG4gIH1cbn1cblxuLy8gIFRhYnVsYXIgZGF0YSAoaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L3RhYnVsYXItZGF0YS5odG1sKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIGJvcmRlciBzcGFjaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuLy8gIHRyYW5zZm9ybS1zdHlsZTogIChodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDUvZm9ybXMuaHRtbClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIFJlbW92ZSB0aGUgZGVmYXVsdCBzdHlsaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuLy8gMy4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvLyAxXG4gIGJvcmRlci1zdHlsZTogbm9uZTsgLy8gMVxuICBjb2xvcjogaW5oZXJpdDsgLy8gMVxuICBmb250LXNpemU6IDFlbTsgLy8gMVxuICBtYXJnaW46IDA7IC8vIDNcbn1cblxuLy8gQ29ycmVjdCB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4vLyAxLiBDb3JyZWN0IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuYnV0dG9uLFxuaW5wdXQgeyAvLyAxXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vLyBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbi8vIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbmJ1dHRvbixcbnNlbGVjdCB7IC8vIDFcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8vIDEuIFByZXZlbnQgdGhlIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4vLyAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4vLyAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuYnV0dG9uLFxuaHRtbCBbdHlwZT0nYnV0dG9uJ10sIC8vIDFcblt0eXBlPSdyZXNldCddLFxuW3R5cGU9J3N1Ym1pdCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8vIDJcbn1cblxuLy8gUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbjo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLy8gQ29ycmVjdCB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vLyBDb3JyZWN0IHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzLlxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAuMzVlbSAuNjI1ZW0gLjc1ZW07XG59XG5cbi8vIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4vLyAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4vLyAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbmxlZ2VuZCB7XG4gIGRpc3BsYXk6IHRhYmxlOyAvLyAxXG4gIG1heC13aWR0aDogMTAwJTsgLy8gMVxuICBwYWRkaW5nOiAwOyAvLyAyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8vIDFcbn1cblxuLy8gMS4gUmVtb3ZlIHRoZSB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4vLyAyLiBDaGFuZ2UgdGhlIHJlc2l6ZSBkaXJlY3Rpb24gb24gdGV4dGFyZWFzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgLy8gMVxuICByZXNpemU6IHZlcnRpY2FsOyAvLyAyXG59XG5cbi8vIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG5bdHlwZT0nY2hlY2tib3gnXSxcblt0eXBlPSdyYWRpbyddIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLy8gQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9uIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vLyAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbi8vIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuW3R5cGU9J3NlYXJjaCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8vIDFcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8vIDJcbn1cblxuLy8gUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBmb3IgT1MgWC5cbjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbjo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLy8gQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvbiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IC41NDtcbn1cblxuLy8gMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbi8vIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLy8gMVxuICBmb250OiBpbmhlcml0OyAvLyAyXG59XG5cbi8vICBXQUktQVJJQSAoaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L2RvbS5odG1sI3dhaS1hcmlhKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQ2hhbmdlIHRoZSBjdXJzb3Igb24gYnVzeSBlbGVtZW50cyAob3BpbmlvbmF0ZWQpLlxuW2FyaWEtYnVzeT0ndHJ1ZSddIHtcbiAgY3Vyc29yOiBwcm9ncmVzcztcbn1cblxuLy8gQ2hhbmdlIHRoZSBjdXJzb3Igb24gY29udHJvbCBlbGVtZW50cyAob3BpbmlvbmF0ZWQpLlxuW2FyaWEtY29udHJvbHNdIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vLyBDaGFuZ2UgdGhlIGN1cnNvciBvbiBkaXNhYmxlZCwgbm90LWVkaXRhYmxlLCBvciBvdGhlcndpc2Vcbi8vIGlub3BlcmFibGUgZWxlbWVudHMgKG9waW5pb25hdGVkKS5cblthcmlhLWRpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLy8gVXNlciBpbnRlcmFjdGlvbiAoaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L2VkaXRpbmcuaHRtbClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIFJlbW92ZSB0aGUgdGFwcGluZyBkZWxheSBvbiBjbGlja2FibGUgZWxlbWVudHMgKG9waW5pb25hdGVkKS5cbi8vIDEuIFJlbW92ZSB0aGUgdGFwcGluZyBkZWxheSBpbiBJRSAxMC5cbmEsXG5hcmVhLFxuYnV0dG9uLFxuaW5wdXQsXG5sYWJlbCxcbnNlbGVjdCxcbnRleHRhcmVhLFxuW3RhYmluZGV4XSB7XG4gIC1tcy10b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjsgLy8gMVxuICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbn1cblxuLy8gQ2hhbmdlIHRoZSBkaXNwbGF5IG9uIHZpc3VhbGx5IGhpZGRlbiBhY2Nlc3NpYmxlIGVsZW1lbnRzIChvcGluaW9uYXRlZCkuXG5baGlkZGVuXSB7XG4gICZbYXJpYS1oaWRkZW49J2ZhbHNlJ10ge1xuICAgIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gICAgZGlzcGxheTogaW5oZXJpdDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIGNsaXA6IGF1dG87XG4gICAgfVxuICB9XG59XG4iLCIvKiFcblRoZW1lIE5hbWU6IEF1cm9yYSBUaGVtZVxuVGhlbWUgVVJJOiBodHRwOi8vdW5kZXJzY29yZXMubWUvXG5BdXRob3I6IENhcnJpZSBGb3JkZVxuQXV0aG9yIFVSSTogaHR0cHM6Ly9jYXJyaWVmb3JkZS5jb21cbkRlc2NyaXB0aW9uOiBEZXNjcmlwdGlvblxuVmVyc2lvbjogMS4wLjBcbkxpY2Vuc2U6IEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHYyIG9yIGxhdGVyXG5MaWNlbnNlIFVSSTogTElDRU5TRVxuVGV4dCBEb21haW46IGF1cm9yYS10aGVtZVxuVGFnczogY3VzdG9tLWJhY2tncm91bmQsIGN1c3RvbS1sb2dvLCBjdXN0b20tbWVudSwgZmVhdHVyZWQtaW1hZ2VzLCB0aHJlYWRlZC1jb21tZW50cywgdHJhbnNsYXRpb24tcmVhZHlcblxuVGhpcyB0aGVtZSwgbGlrZSBXb3JkUHJlc3MsIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBHUEwuXG5Vc2UgaXQgdG8gbWFrZSBzb21ldGhpbmcgY29vbCwgaGF2ZSBmdW4sXG5hbmQgc2hhcmUgd2hhdCB5b3UndmUgbGVhcm5lZCB3aXRob3RoZXJzLlxuXG5BdXJvcmEgVGhlbWUgaXMgYmFzZWQgb24gVW5kZXJzY29yZXMgaHR0cHM6Ly91bmRlcnNjb3Jlcy5tZS8sIChDKSAyMDEyLTIwMTcgQXV0b21hdHRpYywgSW5jLlxuVW5kZXJzY29yZXMgaXMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR1BMIHYyIG9yIGxhdGVyLlxuKi9cbi8qISBzYW5pdGl6ZS5jc3MgdjQuMS4wIHwgQ0MwIExpY2Vuc2UgfCBnaXRodWIuY29tL2pvbmF0aGFudG5lYWwvc2FuaXRpemUuY3NzICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbnRlbXBsYXRlLFxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbiosXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cbjo6YmVmb3JlLFxuOjphZnRlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGluaGVyaXQ7IH1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IC42N2VtIDA7IH1cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbmhyIHtcbiAgaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG5uYXYgb2wsXG5uYXYgdWwge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4My4zMzMzJTsgfVxuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDgzLjMzMzMlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtLjVlbTsgfVxuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IzZDRmYztcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IzZDRmYztcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbmF1ZGlvLFxuY2FudmFzLFxuaWZyYW1lLFxuaW1nLFxuc3ZnLFxudmlkZW8ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG5zdmcge1xuICBmaWxsOiBjdXJyZW50Q29sb3I7IH1cbiAgc3ZnOm5vdCg6cm9vdCkge1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyB9XG4gIGE6aG92ZXIge1xuICAgIG91dGxpbmUtd2lkdGg6IDA7IH1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBtYXJnaW46IDA7IH1cblxuYnV0dG9uLFxuaW5wdXQge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG5idXR0b24sXG5odG1sIFt0eXBlPSdidXR0b24nXSxcblt0eXBlPSdyZXNldCddLFxuW3R5cGU9J3N1Ym1pdCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbjotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IC4zNWVtIC42MjVlbSAuNzVlbTsgfVxuXG5sZWdlbmQge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwO1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyB9XG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHJlc2l6ZTogdmVydGljYWw7IH1cblxuW3R5cGU9J2NoZWNrYm94J10sXG5bdHlwZT0ncmFkaW8nXSB7XG4gIHBhZGRpbmc6IDA7IH1cblxuOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cblt0eXBlPSdzZWFyY2gnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgfVxuXG46Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG46Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IC41NDsgfVxuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIGZvbnQ6IGluaGVyaXQ7IH1cblxuW2FyaWEtYnVzeT0ndHJ1ZSddIHtcbiAgY3Vyc29yOiBwcm9ncmVzczsgfVxuXG5bYXJpYS1jb250cm9sc10ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuW2FyaWEtZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbmEsXG5hcmVhLFxuYnV0dG9uLFxuaW5wdXQsXG5sYWJlbCxcbnNlbGVjdCxcbnRleHRhcmVhLFxuW3RhYmluZGV4XSB7XG4gIC1tcy10b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbiAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247IH1cblxuW2hpZGRlbl1bYXJpYS1oaWRkZW49J2ZhbHNlJ10ge1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBkaXNwbGF5OiBpbmhlcml0O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cbiAgW2hpZGRlbl1bYXJpYS1oaWRkZW49J2ZhbHNlJ106Zm9jdXMge1xuICAgIGNsaXA6IGF1dG87IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogXCIxNnB4XCI7IH1cblxuYm9keSB7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBjb2xvcjogIzIyMjtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWYsIFwiQXBwbGUgQ29sb3IgRW1vamlcIiwgXCJTZWdvZSBVSSBFbW9qaVwiLCBcIlNlZ29lIFVJIFN5bWJvbFwiO1xuICBsaW5lLWhlaWdodDogMS41OyB9XG5cbmEge1xuICBjb2xvcjogIzBlM2NkYTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluLW91dDsgfVxuICBhOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjMGUzY2RhOyB9XG4gIGE6aG92ZXIge1xuICAgIGNvbG9yOiAjNDU4ZGZlOyB9XG5cbmltZyB7XG4gIGhlaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG4iLCIvLyBCQVNFXG5cbmh0bWwge1xuXHRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSArIFwicHhcIjtcbn1cblxuYm9keSB7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkYm9keS1iYWNrZ3JvdW5kOyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIG9yZGVyL3Byb3BlcnRpZXMtYWxwaGFiZXRpY2FsLW9yZGVyXG5cdGNvbG9yOiAkdGV4dC1kZWZhdWx0LWRhcms7XG5cdGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcblx0bGluZS1oZWlnaHQ6IHVuaXRsZXNzLWNhbGMoJGJhc2UtbGluZS1oZWlnaHQsICRiYXNlLWZvbnQtc2l6ZSk7XG59XG5cbmEge1xuXHRjb2xvcjogJGxpbms7XG5cdHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbi1vdXQ7XG5cblx0Jjp2aXNpdGVkIHtcblx0XHRjb2xvcjogJGxpbmstdmlzaXRlZDtcblx0fVxuXG5cdCY6aG92ZXIge1xuXHRcdGNvbG9yOiAkbGluay1ob3Zlcjtcblx0fVxufVxuXG5pbWcge1xuXHRoZWlnaHQ6IGF1dG87XG5cdG1heC13aWR0aDogMTAwJTtcbn1cbiIsIi8vIENPTkZJR1xuLy8gc3R5bGVsaW50LWRpc2FibGUgbWF4LWxpbmUtbGVuZ3RoXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQ09MT1JTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gRGVzY3JpcHRpdmUgY29sb3JzLlxuJHBhbGFudGluYXRlLWJsdWU6ICMwZTNjZGE7XG4kYmx1ZS1kZS1mcmFuY2U6ICM0NThkZmU7XG4kcGFzdGVsLW9yYW5nZTogI2ZlYjY0NTtcbiRtb2pvOiAjYzY0NTM2O1xuJG5vcndheTogIzllYmU4MztcbiRibGFjazogIzIyMjtcbiRhbHVtaW51bTogIzk5OTtcbiRpcm9uOiAjY2NjO1xuJGdhaW5zYm9ybzogI2RkZDtcbiRhdGhlbnMtZ3JheTogI2VlZTtcbiR3aGl0ZS1zbW9rZTogI2Y1ZjVmNTtcbiRhbGFiYXN0ZXI6ICNmYmZiZmI7XG4kd2hpdGU6ICNmZmY7XG5cbi8vIE1haW4gY29sb3JzLlxuJGNvbG9yLXByaW1hcnk6ICRwYWxhbnRpbmF0ZS1ibHVlICFkZWZhdWx0O1xuJGNvbG9yLXNlY29uZGFyeTogJGJsdWUtZGUtZnJhbmNlICFkZWZhdWx0O1xuJGNvbG9yLWFjY2VudDogJHBhc3RlbC1vcmFuZ2UgIWRlZmF1bHQ7XG4kY29sb3Itc3VjY2VzczogJG5vcndheSAhZGVmYXVsdDtcbiRjb2xvci1kYW5nZXI6ICRtb2pvICFkZWZhdWx0O1xuJGNvbG9yLWxpZ2h0LWdyYXk6ICR3aGl0ZS1zbW9rZSAhZGVmYXVsdDtcbiRjb2xvci1kYXJrLWdyYXk6ICRhbHVtaW51bSAhZGVmYXVsdDtcbiRjb2xvci1zaGFkb3c6IHJnYmEoJGJsYWNrLCAwLjE1KTtcblxuLy8vIFRoZSBtYWluIGNvbG9ycyB1c2VkIHRocm91Z2hvdXQgdGhlIHNpdGUuXG4vLy8gVGhpcyBtYXAgY2FuIGJlIHVzZWQgdG8gYXV0b21hdGljYWxseSBhZGQgY29sb3IgY2xhc3Nlcy5cbi8vL1xuLy8vIEB0eXBlIE1hcFxuJHRoZW1lLWNvbG9yczogKFxuXHRcInByaW1hcnlcIjogJGNvbG9yLXByaW1hcnksXG5cdFwic2Vjb25kYXJ5XCI6ICRjb2xvci1zZWNvbmRhcnksXG5cdFwiYWNjZW50XCI6ICRjb2xvci1hY2NlbnQsXG5cdFwic3VjY2Vzc1wiOiAkY29sb3Itc3VjY2Vzcyxcblx0XCJkYW5nZXJcIjogJGNvbG9yLWRhbmdlcixcblx0XCJsaWdodC1ncmF5XCI6ICRjb2xvci1saWdodC1ncmF5LFxuXHRcImRhcmstZ3JheVwiOiAkY29sb3ItZGFyay1ncmF5LFxuXHRcInNoYWRvd1wiOiAkY29sb3Itc2hhZG93XG4pO1xuXG4vLyBFbGVtZW50cy5cbiRib2R5LWJhY2tncm91bmQ6ICR3aGl0ZTtcblxuJHRleHQtZGVmYXVsdC1kYXJrOiAkYmxhY2s7XG4kdGV4dC1kZWZhdWx0LWxpZ2h0OiAkd2hpdGUtc21va2U7XG5cbiRsaW5rOiAkY29sb3ItcHJpbWFyeTtcbiRsaW5rLWhvdmVyOiAkY29sb3Itc2Vjb25kYXJ5O1xuJGxpbmstdmlzaXRlZDogJGxpbms7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVFlQT0dSQVBIWVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgc2Fucy1zZXJpZiwgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCIgIWRlZmF1bHQ7IC8vIHN0eWxlbGludC1kaXNhYmxlLWxpbmUgdmFsdWUta2V5d29yZC1jYXNlXG4kZm9udC1mYW1pbHktbW9ub3NwYWNlOiBTRk1vbm8tUmVndWxhciwgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsIFwiTGliZXJhdGlvbiBNb25vXCIsIFwiQ291cmllciBOZXdcIiwgbW9ub3NwYWNlICFkZWZhdWx0OyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIHZhbHVlLWtleXdvcmQtY2FzZVxuXG4vLy8gU2V0IHRoZSBgYm9keWAgZm9udCBmYW1pbHkuXG4vLy9cbi8vLyBAdHlwZSBTdHJpbmdcbiRiYXNlLWZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktc2Fucy1zZXJpZjtcblxuLy8vIFNldCB0aGUgYmFzZSAoYHJvb3RgKSBmb250IHNpemUgZm9yIHRoZSBwcm9qZWN0LiBUaGlzIHNob3VsZCBiZSB1bml0bGVzcyFcbi8vL1xuLy8vIEB0eXBlIE51bWJlclxuJGJhc2UtZm9udC1zaXplOiAxNiAhZGVmYXVsdDtcblxuLy8vIFNldCB0aGUgYmFzZSBsaW5lIGhlaWdodCBmb3IgdGhlIHByb2plY3QuXG4vLy8gVGhpcyB2YWx1ZSBzaG91bGQgYmUgdW5pdGxlc3MgYW5kIHJlcHJlc2VudCB0aGUgcGl4ZWwgZXF1aXZhbGVudC5cbi8vL1xuLy8vIEB0eXBlIE51bWJlclxuJGJhc2UtbGluZS1oZWlnaHQ6IDI0ICFkZWZhdWx0O1xuXG4vLy8gU2V0IHRoZSBiYXNlIGZvbnQgd2VpZ2h0IGZvciB0aGUgcHJvamVjdC5cbi8vL1xuLy8vIEB0eXBlIHtOdW1iZXJ8U3RyaW5nfVxuJGJhc2UtZm9udC13ZWlnaHQ6IDQwMCAhZGVmYXVsdDtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFNJWkVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8vIFNldCB0aGUgbWF4IHdpZHRoIG9mIHRoZSBzaXRlLlxuLy8vXG4vLy8gQHR5cGUgTnVtYmVyXG4kc2l0ZS13aWR0aDogMTAwJTtcblxuLy8vIFNldCB0aGUgd2lkdGggb2YgdGhlIHNpdGVcInMgY29udGVudC5cbi8vL1xuLy8vIEB0eXBlIE51bWJlclxuJGNvbnRlbnQtd2lkdGg6IDEyMDBweDtcblxuLy8vIFNldCBhIGRlZmF1bHQgZ3V0dGVyIHdpZHRoLlxuLy8vXG4vLy8gQHR5cGUgTnVtYmVyXG4kZ3V0dGVyOiByZW0oMjApO1xuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQlJFQUtQT0lOVFNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLy8gQnJlYWtwb2ludHMgLSBhZGQgbW9yZSBhcyBuZWVkZWQuXG4vLy9cbi8vLyBAdHlwZSBOdW1iZXJcbi8vLyBAbGluayBodHRwczovL21lZGl1bS5mcmVlY29kZWNhbXAuY29tL3RoZS0xMDAtY29ycmVjdC13YXktdG8tZG8tY3NzLWJyZWFrcG9pbnRzLTg4ZDZhNWJhMTg2MiMub3IzZHVubzJoXG4kdGFibGV0LXBvcnRyYWl0OiA2MDBweDtcbiR0YWJsZXQtbGFuZHNjYXBlOiA5MDBweDtcbiRkZXNrdG9wOiAxMjAwcHg7XG4kZGVza3RvcC14bDogMTgwMHB4O1xuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gWi1JTkRFWFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vLyBLZWVwIHlvdXIgc2FuaXR5IHdoaWxlIG1hbmFnaW5nIHlvdXIgei1pbmRlY2VzLlxuLy8vXG4vLy8gQHR5cGUgTWFwXG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL21pbmFtYXJraGFtL3Nhc3N5LXN0YXJ0ZXIvYmxvYi9tYXN0ZXIvc3JjL3Njc3MvdXRpbGl0aWVzL19jb25maWcuc2NzcyNMMzlcbiR6LWluZGV4OiAoXG5cdGRlZmF1bHQ6IDFcbik7XG4iLCIvLyBGVU5DVElPTlNcblxuLy8vIFJlbW92ZXMgdW5pdCBmcm9tIGxlbmd0aC5cbi8vL1xuLy8vIEBwYXJhbSAge051bWJlcn0gJG51bWJlciAtIE51bWJlciBmcm9tIHdoaWNoIHRvIHJlbW92ZSB1bml0LlxuLy8vIEByZXR1cm4ge051bWJlcn0gICAgICAgICAtIFVuaXRsZXNzIG51bWJlci5cbi8vL1xuLy8vIEBsaW5rICAgaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9zbmlwcGV0cy9zYXNzL3N0cmlwLXVuaXQtZnVuY3Rpb24vXG5AZnVuY3Rpb24gc3RyaXAtdW5pdCgkbnVtYmVyKSB7XG5cblx0QGlmIHR5cGUtb2YoJG51bWJlcikgPT0gXCJudW1iZXJcIiBhbmQgbm90IHVuaXRsZXNzKCRudW1iZXIpIHtcblxuXHRcdEByZXR1cm4gJG51bWJlci8gKCRudW1iZXIgKiAwICsgMSk7XG5cdH1cblxuXHRAcmV0dXJuICRudW1iZXI7XG59XG5cbi8vLyBHZXQgYSB1bml0bGVzcyBudW1iZXIgZnJvbSB0d28gbnVtYmVycy4gSGVscGZ1bCBmb3IgY2FsY3VsYXRpb24gbGluZSBoZWlnaHQuXG4vLy9cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRudW1iZXIgICAgICAgICAgICAgICAgIC0gTnVtZXJhdG9yIGZvciBjYWxjdWxhdGlvbi5cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRiYXNlIFskYmFzZS1mb250LXNpemVdIC0gRGVub21pbmF0b3IgZm9yIGNhbGN1bGF0aW9uLlxuLy8vIEByZXR1cm4ge051bWJlcn0gICAgICAgICAgICAgICAgICAgICAgICAgLSBOdW1iZXIgd2l0aG91dCB1bml0cy5cbkBmdW5jdGlvbiB1bml0bGVzcy1jYWxjKCRudW1iZXIsICRiYXNlOiAkYmFzZS1mb250LXNpemUpIHtcblxuXHRAaWYgbm90IHVuaXRsZXNzKCRudW1iZXIpIHtcblx0XHQkbnVtYmVyOiBzdHJpcC11bml0KCRudW1iZXIpO1xuXHR9XG5cblx0QGlmIG5vdCB1bml0bGVzcygkYmFzZSkge1xuXHRcdCRiYXNlOiBzdHJpcC11bml0KCRiYXNlKTtcblx0fVxuXG5cdEByZXR1cm4gJG51bWJlciAvICRiYXNlO1xufVxuXG4vLy8gQ29udmVydCBhIHBpeGVsIHZhbHVlIHRvIGVtcy4gUGFzcyBgJGJhc2VgIGZvciBpbmNyZWFzZWQgYWNjdXJhY3kuXG4vLy9cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRweHZhbCAgICAgICAgICAgICAgICAgIC0gVGhlIHBpeGVsIHZhbHVlIHRvIGNvbnZlcnQuXG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkYmFzZSBbJGJhc2UtZm9udC1zaXplXSAtIFRoZSBwaXhlbCBlcXVpdmFsZW50IG9mIGFuY2VzdG9yIGZvbnQgc2l6ZS5cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgICAgICAgICAgICAgICAgICAgIC0gVGhlIGBlbWAgZm9udCBzaXplLlxuLy8vXG4vLy8gQGxpbmsgICBodHRwczovL2dpdGh1Yi5jb20vdGhvdWdodGJvdC9ib3VyYm9uL2Jsb2IvdjQtc3RhYmxlL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZnVuY3Rpb25zL19weC10by1lbS5zY3NzXG5AZnVuY3Rpb24gZW0oJHB4dmFsLCAkYmFzZTogJGJhc2UtZm9udC1zaXplKSB7XG5cblx0QGlmIG5vdCB1bml0bGVzcygkcHh2YWwpIHtcblx0XHQkcHh2YWw6IHN0cmlwLXVuaXQoJHB4dmFsKTtcblx0fVxuXG5cdEBpZiBub3QgdW5pdGxlc3MoJGJhc2UpIHtcblx0XHQkYmFzZTogc3RyaXAtdW5pdCgkYmFzZSk7XG5cdH1cblxuXHRAcmV0dXJuICgkcHh2YWwgLyAkYmFzZSkgKiAxZW07XG59XG5cbi8vLyBDb252ZXJ0IGEgcGl4ZWwgdmFsdWUgdG8gcmVtcy5cbi8vL1xuLy8vIEBwYXJhbSAge051bWJlcn0gJHB4dmFsIC0gVGhlIHBpeGVsIHZhbHVlIHRvIGNvbnZlcnQuXG4vLy8gQHJldHVybiB7TnVtYmVyfSAgICAgICAgLSBUaGUgYHJlbWAgZm9udCBzaXplLlxuLy8vXG4vLy8gQGxpbmsgICBodHRwczovL2dpdGh1Yi5jb20vdGhvdWdodGJvdC9ib3VyYm9uL2Jsb2IvdjQtc3RhYmxlL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZnVuY3Rpb25zL19weC10by1yZW0uc2Nzc1xuQGZ1bmN0aW9uIHJlbSgkcHh2YWwpIHtcblxuXHRAaWYgbm90IHVuaXRsZXNzKCRweHZhbCkge1xuXHRcdCRweHZhbDogc3RyaXAtdW5pdCgkcHh2YWwpO1xuXHR9XG5cblx0QHJldHVybiAoJHB4dmFsIC8gJGJhc2UtZm9udC1zaXplKSAqIDFyZW07XG59XG5cbi8vLyBUaW50IGEgY29sb3IgKGFkZCB3aGl0ZSkgYnkgYSBzcGVjaWZpZWQgYW1vdW50LlxuLy8vXG4vLy8gQHBhcmFtICB7Q29sb3J9ICAkY29sb3IgIC0gVGhlIGNvbG9yIHRvIHRpbnQuXG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkYW1vdW50IC0gVGhlIGFtb3VudCBvZiB3aGl0ZSB0byBhZGQuXG4vLy8gQHJldHVybiB7Q29sb3J9ICAgICAgICAgIC0gVGhlIHRpbnRlZCBjb2xvci5cbkBmdW5jdGlvbiB0aW50KCRjb2xvciwgJGFtb3VudCkge1xuXG5cdEByZXR1cm4gbWl4KCNmZmYsICRjb2xvciwgJGFtb3VudCk7XG59XG5cbi8vLyBUb25lIGEgY29sb3IgKGFkZCBncmF5KSBieSBhIHNwZWNpZmllZCBhbW91bnQuXG4vLy9cbi8vLyBAcGFyYW0gIHtDb2xvcn0gICRjb2xvciAgICAgICAgICAtIFRoZSBjb2xvciB0byB0b25lLlxuLy8vIEBwYXJhbSAge051bWJlcn0gJGFtb3VudCAgICAgICAgIC0gVGhlIGFtb3VudCBvZiBncmF5IHRvIGFkZC5cbi8vLyBAcGFyYW0gIHtDb2xvcn0gICRncmF5IFsjODA4MDgwXSAtIFRoZSBncmF5IHRvIG1peC5cbi8vLyBAcmV0dXJuIHtDb2xvcn0gICAgICAgICAgICAgICAgICAtIFRoZSB0b25lZCBjb2xvci5cbi8vLyBAdG9kbyBSZXBsYWNlIGhhcmRjb2RlZCBncmF5IHdpdGggZGVmYXVsdCBzcGVjaWZpZWQgaW4gYF9jb25maWcuc2Nzc2AuXG5AZnVuY3Rpb24gdG9uZSgkY29sb3IsICRhbW91bnQsICRncmF5OiAjODA4MDgwKSB7XG5cblx0QHJldHVybiBtaXgoJGdyYXksICRjb2xvciwgJGFtb3VudCk7XG59XG5cbi8vLyBTaGFkZSBhIGNvbG9yIChhZGQgYmxhY2spIGJ5IGEgc3BlY2lmaWVkIGFtb3VudC5cbi8vL1xuLy8vIEBwYXJhbSAge0NvbG9yfSAgJGNvbG9yICAtIFRoZSBjb2xvciB0byBzaGFkZS5cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRhbW91bnQgLSBUaGUgYW1vdW50IG9mIGJsYWNrIHRvIGFkZC5cbi8vLyBAcmV0dXJuIHtDb2xvcn0gICAgICAgICAgLSBUaGUgc2hhZGVkIGNvbG9yLlxuQGZ1bmN0aW9uIHNoYWRlKCRjb2xvciwgJGFtb3VudCkge1xuXG5cdEByZXR1cm4gbWl4KCMwMDAsICRjb2xvciwgJGFtb3VudCk7XG59XG5cbi8vLyBHZXQgYSB6LWluZGV4IGZyb20gYSB6LWluZGV4IG1hcC5cbi8vL1xuLy8vIEBwYXJhbSAge1N0cmluZ30gJGluZGV4ICAgICAgICAtIFRoZSBpbmRleCB0byBnZXQuXG4vLy8gQHBhcmFtICB7TWFwfSAgICAkeiBbJHotaW5kZXhdIC0gVGhlIG1hcCBjb250YWluaW5nIHotaW5kZWNlcy5cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgICAgICAgICAgLSBUaGUgY29ycmVzcG9uZGluZyB6LWluZGV4IHZhbHVlLlxuQGZ1bmN0aW9uIHooJGluZGV4LCAkejogJHotaW5kZXgpIHtcblxuXHRAaWYgbm90IG1hcC1nZXQoJHosICRpbmRleCkge1xuXG5cdFx0QHdhcm4gXCJObyBpbmRleCBgI3tpbnNwZWN0KCRpbmRleCl9YCBmb3VuZCFcIjtcblx0fVxuXG5cdEByZXR1cm4gbWFwLWdldCgkeiwgJGluZGV4KTtcbn1cblxuLy8vIENhbGN1bGF0ZSB0aGUgbHVtaW5hbmNlIG9mIGEgZ2l2ZW4gY29sb3IuXG4vLy9cbi8vLyBAcGFyYW0gIHtDb2xvcn0gICRjb2xvciAtIFRoZSBjb2xvciB0byBjaGVjay5cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgICAtIFRoZSBjb2xvclwicyBsdW1pbmFuY2UuXG4vLy9cbi8vLyBAbGluayAgIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9XQ0FHMjAtVEVDSFMvRzE3Lmh0bWwjRzE3LXRlc3RzXG5AZnVuY3Rpb24gbHVtaW5hbmNlKCRjb2xvcikge1xuXHQkcmVkOiByZWQoJGNvbG9yKSAqIDAuMjEyNjtcblx0JGdyZWVuOiBncmVlbigkY29sb3IpICogMC43MTUyO1xuXHQkYmx1ZTogYmx1ZSgkY29sb3IpICogMC4wNzIyO1xuXG5cdEByZXR1cm4gJHJlZCArICRncmVlbiArICRibHVlO1xufVxuXG4vLy8gQ2FsY3VsYXRlIHRoZSBjb250cmFzdCBiZXR3ZWVuIHR3byBjb2xvcnMuXG4vLy9cbi8vLyBAcGFyYW0gIHtDb2xvcn0gICRjb2xvcjEgLSBUaGUgZmlyc3QgY29sb3IgdG8gY2hlY2suXG4vLy8gQHBhcmFtICB7Q29sb3J9ICAkY29sb3IyIC0gVGhlIHNlY29uZCBjb2xvciB0byBjaGVjay5cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgICAgLSBUaGUgY29udHJhc3QgcmF0aW8gYmV0d2VlbiB0aGUgdHdvIGNvbG9ycy5cbi8vL1xuLy8vIEBsaW5rICAgaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC1URUNIUy9HMTcuaHRtbCNHMTctdGVzdHNcbkBmdW5jdGlvbiBjYWxjdWxhdGUtY29udHJhc3QoJGNvbG9yMSwgJGNvbG9yMikge1xuXG5cdCRjb2xvcjE6IGx1bWluYW5jZSgkY29sb3IxKSArIDAuMDU7XG5cdCRjb2xvcjI6IGx1bWluYW5jZSgkY29sb3IyKSArIDAuMDU7XG5cblx0QHJldHVybiBtYXgoJGNvbG9yMSwgJGNvbG9yMikgLyBtaW4oJGNvbG9yMSwgJGNvbG9yMik7XG59XG5cbi8vLyBDaG9vc2VzIHRoZSBjb2xvciB3aXRoIHRoZSBiZXN0IGNvbnRyYXN0IGZvciB0aGUgYmFzZS5cbi8vL1xuLy8vIEBwYXJhbSAge0NvbG9yfSAkYmFzZS1jb2xvciAgICAgICAgICAgICAgICAgIC0gVGhlIGNvbG9yIGFnYWluc3Qgd2hpY2ggdG8gY2hlY2suXG4vLy8gQHBhcmFtICB7Q29sb3J9ICRsaWdodCBbJHRleHQtZGVmYXVsdC1saWdodF0gLSBUaGUgbGlnaHQgY29sb3IgYWdhaW5zdCB3aGljaCB0byBjaGVjay5cbi8vLyBAcGFyYW0gIHtDb2xvcn0gJGRhcmsgIFskdGV4dC1kZWZhdWx0LWRhcmtdICAtIFRoZSBkYXJrIGNvbG9yIGFnYWluc3Qgd2hpY2ggdG8gY2hlY2suXG4vLy8gQHJldHVybiB7Q29sb3J9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLSBUaGUgY29sb3Igd2l0aCB0aGUgYmV0dGVyIGNvbnRyYXN0LlxuLy8vXG4vLy8gQGxpbmsgICBodHRwczovL3d3dy53My5vcmcvVFIvV0NBRzIwLVRFQ0hTL0cxNy5odG1sI0cxNy10ZXN0c1xuQGZ1bmN0aW9uIGNvbnRyYXN0KCRiYXNlLWNvbG9yLCAkbGlnaHQ6ICR0ZXh0LWRlZmF1bHQtbGlnaHQsICRkYXJrOiAkdGV4dC1kZWZhdWx0LWRhcmspIHtcblx0JGNvbnRyYXN0LWxpZ2h0OiBjYWxjdWxhdGUtY29udHJhc3QoJGJhc2UtY29sb3IsICRsaWdodCk7XG5cdCRjb250cmFzdC1kYXJrOiBjYWxjdWxhdGUtY29udHJhc3QoJGJhc2UtY29sb3IsICRkYXJrKTtcblxuXHRAaWYgKCRjb250cmFzdC1saWdodCA+ICRjb250cmFzdC1kYXJrKSB7XG5cblx0XHRAcmV0dXJuICRsaWdodDtcblx0fSBAZWxzZSB7XG5cblx0XHRAcmV0dXJuICRkYXJrO1xuXHR9XG59XG4iXX0= */
/*# sourceMappingURL=style.css.map*/